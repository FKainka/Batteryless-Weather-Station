
PowerSupervisor402.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803f00  00803f00  000004dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000488  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004dc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000050c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001f2a  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001346  00000000  00000000  000024c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003fb  00000000  00000000  00003808  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  00003c04  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001427  00000000  00000000  00003c98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ff  00000000  00000000  000050bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000051be  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	48 c0       	rjmp	.+144    	; 0x9e <__vector_6>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	19 c0       	rjmp	.+50     	; 0x44 <__bad_interrupt>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>
  1e:	12 c0       	rjmp	.+36     	; 0x44 <__bad_interrupt>
  20:	11 c0       	rjmp	.+34     	; 0x44 <__bad_interrupt>
  22:	10 c0       	rjmp	.+32     	; 0x44 <__bad_interrupt>
  24:	0f c0       	rjmp	.+30     	; 0x44 <__bad_interrupt>
  26:	0e c0       	rjmp	.+28     	; 0x44 <__bad_interrupt>
  28:	0d c0       	rjmp	.+26     	; 0x44 <__bad_interrupt>
  2a:	0c c0       	rjmp	.+24     	; 0x44 <__bad_interrupt>
  2c:	0b c0       	rjmp	.+22     	; 0x44 <__bad_interrupt>
  2e:	0a c0       	rjmp	.+20     	; 0x44 <__bad_interrupt>
  30:	09 c0       	rjmp	.+18     	; 0x44 <__bad_interrupt>
  32:	08 c0       	rjmp	.+16     	; 0x44 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62
  40:	6b d0       	rcall	.+214    	; 0x118 <main>
  42:	20 c2       	rjmp	.+1088   	; 0x484 <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>

00000046 <_Z11readVoltagev>:
	RTC.INTFLAGS = RTC_OVF_bm;        // Wake up from STANDBY. Just clear the flag (required) - the RTC overflow Event will handle the pulse
}


void rtcDisable(){
	RTC.CTRLA = 0;
  46:	e0 e0       	ldi	r30, 0x00	; 0
  48:	f6 e0       	ldi	r31, 0x06	; 6
  4a:	83 e0       	ldi	r24, 0x03	; 3
  4c:	80 83       	st	Z, r24
  4e:	80 85       	ldd	r24, Z+8	; 0x08
  50:	81 60       	ori	r24, 0x01	; 1
  52:	80 87       	std	Z+8, r24	; 0x08
  54:	83 85       	ldd	r24, Z+11	; 0x0b
  56:	88 23       	and	r24, r24
  58:	e9 f3       	breq	.-6      	; 0x54 <_Z11readVoltagev+0xe>
  5a:	e0 e0       	ldi	r30, 0x00	; 0
  5c:	f6 e0       	ldi	r31, 0x06	; 6
  5e:	60 89       	ldd	r22, Z+16	; 0x10
  60:	71 89       	ldd	r23, Z+17	; 0x11
  62:	81 e0       	ldi	r24, 0x01	; 1
  64:	83 87       	std	Z+11, r24	; 0x0b
  66:	80 e0       	ldi	r24, 0x00	; 0
  68:	90 e0       	ldi	r25, 0x00	; 0
  6a:	11 d1       	rcall	.+546    	; 0x28e <__floatunsisf>
  6c:	9b 01       	movw	r18, r22
  6e:	ac 01       	movw	r20, r24
  70:	6d ec       	ldi	r22, 0xCD	; 205
  72:	7c ec       	ldi	r23, 0xCC	; 204
  74:	8c e8       	ldi	r24, 0x8C	; 140
  76:	94 e4       	ldi	r25, 0x44	; 68
  78:	69 d0       	rcall	.+210    	; 0x14c <__divsf3>
  7a:	20 e0       	ldi	r18, 0x00	; 0
  7c:	30 e0       	ldi	r19, 0x00	; 0
  7e:	4a e7       	ldi	r20, 0x7A	; 122
  80:	54 e4       	ldi	r21, 0x44	; 68
  82:	93 d1       	rcall	.+806    	; 0x3aa <__mulsf3>
  84:	d5 d0       	rcall	.+426    	; 0x230 <__fixunssfsi>
  86:	cb 01       	movw	r24, r22
  88:	08 95       	ret

0000008a <_Z7initAdcv>:
  8a:	80 e1       	ldi	r24, 0x10	; 16
  8c:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
  90:	e0 e0       	ldi	r30, 0x00	; 0
  92:	f6 e0       	ldi	r31, 0x06	; 6
  94:	8d e1       	ldi	r24, 0x1D	; 29
  96:	86 83       	std	Z+6, r24	; 0x06
  98:	81 e1       	ldi	r24, 0x11	; 17
  9a:	82 83       	std	Z+2, r24	; 0x02
  9c:	08 95       	ret

0000009e <__vector_6>:
  9e:	1f 92       	push	r1
  a0:	0f 92       	push	r0
  a2:	0f b6       	in	r0, 0x3f	; 63
  a4:	0f 92       	push	r0
  a6:	11 24       	eor	r1, r1
  a8:	8f 93       	push	r24
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x700143>
  b0:	8f 91       	pop	r24
  b2:	0f 90       	pop	r0
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	0f 90       	pop	r0
  b8:	1f 90       	pop	r1
  ba:	18 95       	reti

000000bc <_Z9rtcEnablej>:
}


void rtcEnable(uint16_t sleep_duration){
	while (RTC.STATUS > 0) {} // Wait for all register to be synchronized
  bc:	e0 e4       	ldi	r30, 0x40	; 64
  be:	f1 e0       	ldi	r31, 0x01	; 1
  c0:	91 81       	ldd	r25, Z+1	; 0x01
  c2:	91 11       	cpse	r25, r1
  c4:	fd cf       	rjmp	.-6      	; 0xc0 <_Z9rtcEnablej+0x4>

	RTC.PER = 1024*sleep_duration; //in seconds
  c6:	20 e0       	ldi	r18, 0x00	; 0
  c8:	30 e0       	ldi	r19, 0x00	; 0
  ca:	38 2f       	mov	r19, r24
  cc:	33 0f       	add	r19, r19
  ce:	33 0f       	add	r19, r19
  d0:	e0 e4       	ldi	r30, 0x40	; 64
  d2:	f1 e0       	ldi	r31, 0x01	; 1
  d4:	22 87       	std	Z+10, r18	; 0x0a
  d6:	33 87       	std	Z+11, r19	; 0x0b
	RTC.INTCTRL = 0 << RTC_CMP_bp
	| 1 << RTC_OVF_bp; //Overflow interrupt.
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	82 83       	std	Z+2, r24	; 0x02
	
	RTC.CTRLA = RTC_PRESCALER_DIV1_gc	//NO Prescaler
	| 1 << RTC_RTCEN_bp       	//Enable RTC
	| 1 << RTC_RUNSTDBY_bp;   	//Run in standby
  dc:	91 e8       	ldi	r25, 0x81	; 129
  de:	90 83       	st	Z, r25

	RTC.CLKSEL = RTC_CLKSEL_INT1K_gc; // 32KHz divided by 32, i.e run at 1.024kHz
  e0:	87 83       	std	Z+7, r24	; 0x07
  e2:	08 95       	ret

000000e4 <_Z5setupv>:
}

void setup(){
	#if F_CPU == 2000000
	_PROTECTED_WRITE(CLKCTRL.MCLKCTRLA, CLKCTRL_CLKSEL_OSC20M_gc); 	/* Set the Main clock to internal 20MHz oscillator*/
  e4:	88 ed       	ldi	r24, 0xD8	; 216
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	84 bf       	out	0x34, r24	; 52
  ea:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
	_PROTECTED_WRITE(CLKCTRL.MCLKCTRLB, CLKCTRL_PDIV_10X_gc | CLKCTRL_PEN_bm);  	/* Set the Main clock division factor to 6X and keep the Main clock prescaler enabled. */
  ee:	23 e1       	ldi	r18, 0x13	; 19
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	84 bf       	out	0x34, r24	; 52
  f4:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x700061>
	_PROTECTED_WRITE(CLKCTRL.MCLKCTRLB, CLKCTRL_PDIV_32X_gc | CLKCTRL_PEN_bm);  	/* Set the Main clock division factor to 6X and keep the Main clock prescaler enabled. */
	#endif


	
	rtcEnable(SLEEP_TIME);
  f8:	8e e1       	ldi	r24, 0x1E	; 30
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	df df       	rcall	.-66     	; 0xbc <_Z9rtcEnablej>
	set_sleep_mode(SLEEP_MODE_STANDBY); // set power saving mode as STANDBY, not POWER DOWN
  fe:	e0 e5       	ldi	r30, 0x50	; 80
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	89 7f       	andi	r24, 0xF9	; 249
 106:	82 60       	ori	r24, 0x02	; 2
 108:	80 83       	st	Z, r24
	sleep_enable();                     // enable sleep mode
 10a:	80 81       	ld	r24, Z
 10c:	81 60       	ori	r24, 0x01	; 1
 10e:	80 83       	st	Z, r24
	sei();                              // turn on interrupts
 110:	78 94       	sei
	
	initAdc();
 112:	bb df       	rcall	.-138    	; 0x8a <_Z7initAdcv>
	readVoltage(); //read once because of faulty readings
 114:	98 df       	rcall	.-208    	; 0x46 <_Z11readVoltagev>
 116:	08 95       	ret

00000118 <main>:
	
}


int main(void){
	setup();
 118:	e5 df       	rcall	.-54     	; 0xe4 <_Z5setupv>
	serial(57600);
	sendString("\n\nSTART\n");
	#endif
	
	//FOR some reason this musst be set her!
	BOARD_SET_DIR
 11a:	e0 e0       	ldi	r30, 0x00	; 0
 11c:	f4 e0       	ldi	r31, 0x04	; 4
 11e:	8f ef       	ldi	r24, 0xFF	; 255
 120:	80 83       	st	Z, r24
	BOARD_OFF   // Start Value =off
 122:	14 82       	std	Z+4, r1	; 0x04
		sendString(buffer);
		#endif
		
		if (volt > VOLTAGE_ON){
			
			BOARD_ON
 124:	c0 e0       	ldi	r28, 0x00	; 0
 126:	d4 e0       	ldi	r29, 0x04	; 4
 128:	1f ef       	ldi	r17, 0xFF	; 255
	BOARD_SET_DIR
	BOARD_OFF   // Start Value =off
	
	while (1)
	{
		volt = readVoltage();
 12a:	8d df       	rcall	.-230    	; 0x46 <_Z11readVoltagev>
		#ifdef MY_DEBUG
		sprintf(buffer,"V1:%d\n", volt);
		sendString(buffer);
		#endif
		
		if (volt > VOLTAGE_ON){
 12c:	89 3b       	cpi	r24, 0xB9	; 185
 12e:	9b 40       	sbci	r25, 0x0B	; 11
 130:	58 f0       	brcs	.+22     	; 0x148 <main+0x30>
			
			BOARD_ON
 132:	1c 83       	std	Y+4, r17	; 0x04
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 134:	8f e7       	ldi	r24, 0x7F	; 127
 136:	94 e8       	ldi	r25, 0x84	; 132
 138:	2e e1       	ldi	r18, 0x1E	; 30
 13a:	81 50       	subi	r24, 0x01	; 1
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	20 40       	sbci	r18, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0x22>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0x2c>
 144:	00 00       	nop
			sprintf(buffer,"BOARD ON\n");
			sendString(buffer);
			#endif
			
			_delay_ms(EXEC_TIME);  //5s
			BOARD_OFF
 146:	1c 82       	std	Y+4, r1	; 0x04
		sprintf(buffer,"V2:%d\n", volt);
		sendString(buffer);
		_delay_ms(200);
		#endif
		
		sleep_cpu();
 148:	88 95       	sleep
	
	//FOR some reason this musst be set her!
	BOARD_SET_DIR
	BOARD_OFF   // Start Value =off
	
	while (1)
 14a:	ef cf       	rjmp	.-34     	; 0x12a <main+0x12>

0000014c <__divsf3>:
 14c:	0e 94 ba 00 	call	0x174	; 0x174 <__divsf3x>
 150:	0c 94 9b 01 	jmp	0x336	; 0x336 <__fp_round>
 154:	0e 94 94 01 	call	0x328	; 0x328 <__fp_pscB>
 158:	58 f0       	brcs	.+22     	; 0x170 <__divsf3+0x24>
 15a:	0e 94 8d 01 	call	0x31a	; 0x31a <__fp_pscA>
 15e:	40 f0       	brcs	.+16     	; 0x170 <__divsf3+0x24>
 160:	29 f4       	brne	.+10     	; 0x16c <__divsf3+0x20>
 162:	5f 3f       	cpi	r21, 0xFF	; 255
 164:	29 f0       	breq	.+10     	; 0x170 <__divsf3+0x24>
 166:	0c 94 84 01 	jmp	0x308	; 0x308 <__fp_inf>
 16a:	51 11       	cpse	r21, r1
 16c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_szero>
 170:	0c 94 8a 01 	jmp	0x314	; 0x314 <__fp_nan>

00000174 <__divsf3x>:
 174:	0e 94 ac 01 	call	0x358	; 0x358 <__fp_split3>
 178:	68 f3       	brcs	.-38     	; 0x154 <__divsf3+0x8>

0000017a <__divsf3_pse>:
 17a:	99 23       	and	r25, r25
 17c:	b1 f3       	breq	.-20     	; 0x16a <__divsf3+0x1e>
 17e:	55 23       	and	r21, r21
 180:	91 f3       	breq	.-28     	; 0x166 <__divsf3+0x1a>
 182:	95 1b       	sub	r25, r21
 184:	55 0b       	sbc	r21, r21
 186:	bb 27       	eor	r27, r27
 188:	aa 27       	eor	r26, r26
 18a:	62 17       	cp	r22, r18
 18c:	73 07       	cpc	r23, r19
 18e:	84 07       	cpc	r24, r20
 190:	38 f0       	brcs	.+14     	; 0x1a0 <__divsf3_pse+0x26>
 192:	9f 5f       	subi	r25, 0xFF	; 255
 194:	5f 4f       	sbci	r21, 0xFF	; 255
 196:	22 0f       	add	r18, r18
 198:	33 1f       	adc	r19, r19
 19a:	44 1f       	adc	r20, r20
 19c:	aa 1f       	adc	r26, r26
 19e:	a9 f3       	breq	.-22     	; 0x18a <__divsf3_pse+0x10>
 1a0:	35 d0       	rcall	.+106    	; 0x20c <__divsf3_pse+0x92>
 1a2:	0e 2e       	mov	r0, r30
 1a4:	3a f0       	brmi	.+14     	; 0x1b4 <__divsf3_pse+0x3a>
 1a6:	e0 e8       	ldi	r30, 0x80	; 128
 1a8:	32 d0       	rcall	.+100    	; 0x20e <__divsf3_pse+0x94>
 1aa:	91 50       	subi	r25, 0x01	; 1
 1ac:	50 40       	sbci	r21, 0x00	; 0
 1ae:	e6 95       	lsr	r30
 1b0:	00 1c       	adc	r0, r0
 1b2:	ca f7       	brpl	.-14     	; 0x1a6 <__divsf3_pse+0x2c>
 1b4:	2b d0       	rcall	.+86     	; 0x20c <__divsf3_pse+0x92>
 1b6:	fe 2f       	mov	r31, r30
 1b8:	29 d0       	rcall	.+82     	; 0x20c <__divsf3_pse+0x92>
 1ba:	66 0f       	add	r22, r22
 1bc:	77 1f       	adc	r23, r23
 1be:	88 1f       	adc	r24, r24
 1c0:	bb 1f       	adc	r27, r27
 1c2:	26 17       	cp	r18, r22
 1c4:	37 07       	cpc	r19, r23
 1c6:	48 07       	cpc	r20, r24
 1c8:	ab 07       	cpc	r26, r27
 1ca:	b0 e8       	ldi	r27, 0x80	; 128
 1cc:	09 f0       	breq	.+2      	; 0x1d0 <__divsf3_pse+0x56>
 1ce:	bb 0b       	sbc	r27, r27
 1d0:	80 2d       	mov	r24, r0
 1d2:	bf 01       	movw	r22, r30
 1d4:	ff 27       	eor	r31, r31
 1d6:	93 58       	subi	r25, 0x83	; 131
 1d8:	5f 4f       	sbci	r21, 0xFF	; 255
 1da:	3a f0       	brmi	.+14     	; 0x1ea <__divsf3_pse+0x70>
 1dc:	9e 3f       	cpi	r25, 0xFE	; 254
 1de:	51 05       	cpc	r21, r1
 1e0:	78 f0       	brcs	.+30     	; 0x200 <__divsf3_pse+0x86>
 1e2:	0c 94 84 01 	jmp	0x308	; 0x308 <__fp_inf>
 1e6:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_szero>
 1ea:	5f 3f       	cpi	r21, 0xFF	; 255
 1ec:	e4 f3       	brlt	.-8      	; 0x1e6 <__divsf3_pse+0x6c>
 1ee:	98 3e       	cpi	r25, 0xE8	; 232
 1f0:	d4 f3       	brlt	.-12     	; 0x1e6 <__divsf3_pse+0x6c>
 1f2:	86 95       	lsr	r24
 1f4:	77 95       	ror	r23
 1f6:	67 95       	ror	r22
 1f8:	b7 95       	ror	r27
 1fa:	f7 95       	ror	r31
 1fc:	9f 5f       	subi	r25, 0xFF	; 255
 1fe:	c9 f7       	brne	.-14     	; 0x1f2 <__divsf3_pse+0x78>
 200:	88 0f       	add	r24, r24
 202:	91 1d       	adc	r25, r1
 204:	96 95       	lsr	r25
 206:	87 95       	ror	r24
 208:	97 f9       	bld	r25, 7
 20a:	08 95       	ret
 20c:	e1 e0       	ldi	r30, 0x01	; 1
 20e:	66 0f       	add	r22, r22
 210:	77 1f       	adc	r23, r23
 212:	88 1f       	adc	r24, r24
 214:	bb 1f       	adc	r27, r27
 216:	62 17       	cp	r22, r18
 218:	73 07       	cpc	r23, r19
 21a:	84 07       	cpc	r24, r20
 21c:	ba 07       	cpc	r27, r26
 21e:	20 f0       	brcs	.+8      	; 0x228 <__divsf3_pse+0xae>
 220:	62 1b       	sub	r22, r18
 222:	73 0b       	sbc	r23, r19
 224:	84 0b       	sbc	r24, r20
 226:	ba 0b       	sbc	r27, r26
 228:	ee 1f       	adc	r30, r30
 22a:	88 f7       	brcc	.-30     	; 0x20e <__divsf3_pse+0x94>
 22c:	e0 95       	com	r30
 22e:	08 95       	ret

00000230 <__fixunssfsi>:
 230:	0e 94 b4 01 	call	0x368	; 0x368 <__fp_splitA>
 234:	88 f0       	brcs	.+34     	; 0x258 <__fixunssfsi+0x28>
 236:	9f 57       	subi	r25, 0x7F	; 127
 238:	98 f0       	brcs	.+38     	; 0x260 <__fixunssfsi+0x30>
 23a:	b9 2f       	mov	r27, r25
 23c:	99 27       	eor	r25, r25
 23e:	b7 51       	subi	r27, 0x17	; 23
 240:	b0 f0       	brcs	.+44     	; 0x26e <__fixunssfsi+0x3e>
 242:	e1 f0       	breq	.+56     	; 0x27c <__fixunssfsi+0x4c>
 244:	66 0f       	add	r22, r22
 246:	77 1f       	adc	r23, r23
 248:	88 1f       	adc	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	1a f0       	brmi	.+6      	; 0x254 <__fixunssfsi+0x24>
 24e:	ba 95       	dec	r27
 250:	c9 f7       	brne	.-14     	; 0x244 <__fixunssfsi+0x14>
 252:	14 c0       	rjmp	.+40     	; 0x27c <__fixunssfsi+0x4c>
 254:	b1 30       	cpi	r27, 0x01	; 1
 256:	91 f0       	breq	.+36     	; 0x27c <__fixunssfsi+0x4c>
 258:	0e 94 ce 01 	call	0x39c	; 0x39c <__fp_zero>
 25c:	b1 e0       	ldi	r27, 0x01	; 1
 25e:	08 95       	ret
 260:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__fp_zero>
 264:	67 2f       	mov	r22, r23
 266:	78 2f       	mov	r23, r24
 268:	88 27       	eor	r24, r24
 26a:	b8 5f       	subi	r27, 0xF8	; 248
 26c:	39 f0       	breq	.+14     	; 0x27c <__fixunssfsi+0x4c>
 26e:	b9 3f       	cpi	r27, 0xF9	; 249
 270:	cc f3       	brlt	.-14     	; 0x264 <__fixunssfsi+0x34>
 272:	86 95       	lsr	r24
 274:	77 95       	ror	r23
 276:	67 95       	ror	r22
 278:	b3 95       	inc	r27
 27a:	d9 f7       	brne	.-10     	; 0x272 <__fixunssfsi+0x42>
 27c:	3e f4       	brtc	.+14     	; 0x28c <__fixunssfsi+0x5c>
 27e:	90 95       	com	r25
 280:	80 95       	com	r24
 282:	70 95       	com	r23
 284:	61 95       	neg	r22
 286:	7f 4f       	sbci	r23, 0xFF	; 255
 288:	8f 4f       	sbci	r24, 0xFF	; 255
 28a:	9f 4f       	sbci	r25, 0xFF	; 255
 28c:	08 95       	ret

0000028e <__floatunsisf>:
 28e:	e8 94       	clt
 290:	09 c0       	rjmp	.+18     	; 0x2a4 <__floatsisf+0x12>

00000292 <__floatsisf>:
 292:	97 fb       	bst	r25, 7
 294:	3e f4       	brtc	.+14     	; 0x2a4 <__floatsisf+0x12>
 296:	90 95       	com	r25
 298:	80 95       	com	r24
 29a:	70 95       	com	r23
 29c:	61 95       	neg	r22
 29e:	7f 4f       	sbci	r23, 0xFF	; 255
 2a0:	8f 4f       	sbci	r24, 0xFF	; 255
 2a2:	9f 4f       	sbci	r25, 0xFF	; 255
 2a4:	99 23       	and	r25, r25
 2a6:	a9 f0       	breq	.+42     	; 0x2d2 <__floatsisf+0x40>
 2a8:	f9 2f       	mov	r31, r25
 2aa:	96 e9       	ldi	r25, 0x96	; 150
 2ac:	bb 27       	eor	r27, r27
 2ae:	93 95       	inc	r25
 2b0:	f6 95       	lsr	r31
 2b2:	87 95       	ror	r24
 2b4:	77 95       	ror	r23
 2b6:	67 95       	ror	r22
 2b8:	b7 95       	ror	r27
 2ba:	f1 11       	cpse	r31, r1
 2bc:	f8 cf       	rjmp	.-16     	; 0x2ae <__floatsisf+0x1c>
 2be:	fa f4       	brpl	.+62     	; 0x2fe <__floatsisf+0x6c>
 2c0:	bb 0f       	add	r27, r27
 2c2:	11 f4       	brne	.+4      	; 0x2c8 <__floatsisf+0x36>
 2c4:	60 ff       	sbrs	r22, 0
 2c6:	1b c0       	rjmp	.+54     	; 0x2fe <__floatsisf+0x6c>
 2c8:	6f 5f       	subi	r22, 0xFF	; 255
 2ca:	7f 4f       	sbci	r23, 0xFF	; 255
 2cc:	8f 4f       	sbci	r24, 0xFF	; 255
 2ce:	9f 4f       	sbci	r25, 0xFF	; 255
 2d0:	16 c0       	rjmp	.+44     	; 0x2fe <__floatsisf+0x6c>
 2d2:	88 23       	and	r24, r24
 2d4:	11 f0       	breq	.+4      	; 0x2da <__floatsisf+0x48>
 2d6:	96 e9       	ldi	r25, 0x96	; 150
 2d8:	11 c0       	rjmp	.+34     	; 0x2fc <__floatsisf+0x6a>
 2da:	77 23       	and	r23, r23
 2dc:	21 f0       	breq	.+8      	; 0x2e6 <__floatsisf+0x54>
 2de:	9e e8       	ldi	r25, 0x8E	; 142
 2e0:	87 2f       	mov	r24, r23
 2e2:	76 2f       	mov	r23, r22
 2e4:	05 c0       	rjmp	.+10     	; 0x2f0 <__floatsisf+0x5e>
 2e6:	66 23       	and	r22, r22
 2e8:	71 f0       	breq	.+28     	; 0x306 <__floatsisf+0x74>
 2ea:	96 e8       	ldi	r25, 0x86	; 134
 2ec:	86 2f       	mov	r24, r22
 2ee:	70 e0       	ldi	r23, 0x00	; 0
 2f0:	60 e0       	ldi	r22, 0x00	; 0
 2f2:	2a f0       	brmi	.+10     	; 0x2fe <__floatsisf+0x6c>
 2f4:	9a 95       	dec	r25
 2f6:	66 0f       	add	r22, r22
 2f8:	77 1f       	adc	r23, r23
 2fa:	88 1f       	adc	r24, r24
 2fc:	da f7       	brpl	.-10     	; 0x2f4 <__floatsisf+0x62>
 2fe:	88 0f       	add	r24, r24
 300:	96 95       	lsr	r25
 302:	87 95       	ror	r24
 304:	97 f9       	bld	r25, 7
 306:	08 95       	ret

00000308 <__fp_inf>:
 308:	97 f9       	bld	r25, 7
 30a:	9f 67       	ori	r25, 0x7F	; 127
 30c:	80 e8       	ldi	r24, 0x80	; 128
 30e:	70 e0       	ldi	r23, 0x00	; 0
 310:	60 e0       	ldi	r22, 0x00	; 0
 312:	08 95       	ret

00000314 <__fp_nan>:
 314:	9f ef       	ldi	r25, 0xFF	; 255
 316:	80 ec       	ldi	r24, 0xC0	; 192
 318:	08 95       	ret

0000031a <__fp_pscA>:
 31a:	00 24       	eor	r0, r0
 31c:	0a 94       	dec	r0
 31e:	16 16       	cp	r1, r22
 320:	17 06       	cpc	r1, r23
 322:	18 06       	cpc	r1, r24
 324:	09 06       	cpc	r0, r25
 326:	08 95       	ret

00000328 <__fp_pscB>:
 328:	00 24       	eor	r0, r0
 32a:	0a 94       	dec	r0
 32c:	12 16       	cp	r1, r18
 32e:	13 06       	cpc	r1, r19
 330:	14 06       	cpc	r1, r20
 332:	05 06       	cpc	r0, r21
 334:	08 95       	ret

00000336 <__fp_round>:
 336:	09 2e       	mov	r0, r25
 338:	03 94       	inc	r0
 33a:	00 0c       	add	r0, r0
 33c:	11 f4       	brne	.+4      	; 0x342 <__fp_round+0xc>
 33e:	88 23       	and	r24, r24
 340:	52 f0       	brmi	.+20     	; 0x356 <__fp_round+0x20>
 342:	bb 0f       	add	r27, r27
 344:	40 f4       	brcc	.+16     	; 0x356 <__fp_round+0x20>
 346:	bf 2b       	or	r27, r31
 348:	11 f4       	brne	.+4      	; 0x34e <__fp_round+0x18>
 34a:	60 ff       	sbrs	r22, 0
 34c:	04 c0       	rjmp	.+8      	; 0x356 <__fp_round+0x20>
 34e:	6f 5f       	subi	r22, 0xFF	; 255
 350:	7f 4f       	sbci	r23, 0xFF	; 255
 352:	8f 4f       	sbci	r24, 0xFF	; 255
 354:	9f 4f       	sbci	r25, 0xFF	; 255
 356:	08 95       	ret

00000358 <__fp_split3>:
 358:	57 fd       	sbrc	r21, 7
 35a:	90 58       	subi	r25, 0x80	; 128
 35c:	44 0f       	add	r20, r20
 35e:	55 1f       	adc	r21, r21
 360:	59 f0       	breq	.+22     	; 0x378 <__fp_splitA+0x10>
 362:	5f 3f       	cpi	r21, 0xFF	; 255
 364:	71 f0       	breq	.+28     	; 0x382 <__fp_splitA+0x1a>
 366:	47 95       	ror	r20

00000368 <__fp_splitA>:
 368:	88 0f       	add	r24, r24
 36a:	97 fb       	bst	r25, 7
 36c:	99 1f       	adc	r25, r25
 36e:	61 f0       	breq	.+24     	; 0x388 <__fp_splitA+0x20>
 370:	9f 3f       	cpi	r25, 0xFF	; 255
 372:	79 f0       	breq	.+30     	; 0x392 <__fp_splitA+0x2a>
 374:	87 95       	ror	r24
 376:	08 95       	ret
 378:	12 16       	cp	r1, r18
 37a:	13 06       	cpc	r1, r19
 37c:	14 06       	cpc	r1, r20
 37e:	55 1f       	adc	r21, r21
 380:	f2 cf       	rjmp	.-28     	; 0x366 <__fp_split3+0xe>
 382:	46 95       	lsr	r20
 384:	f1 df       	rcall	.-30     	; 0x368 <__fp_splitA>
 386:	08 c0       	rjmp	.+16     	; 0x398 <__fp_splitA+0x30>
 388:	16 16       	cp	r1, r22
 38a:	17 06       	cpc	r1, r23
 38c:	18 06       	cpc	r1, r24
 38e:	99 1f       	adc	r25, r25
 390:	f1 cf       	rjmp	.-30     	; 0x374 <__fp_splitA+0xc>
 392:	86 95       	lsr	r24
 394:	71 05       	cpc	r23, r1
 396:	61 05       	cpc	r22, r1
 398:	08 94       	sec
 39a:	08 95       	ret

0000039c <__fp_zero>:
 39c:	e8 94       	clt

0000039e <__fp_szero>:
 39e:	bb 27       	eor	r27, r27
 3a0:	66 27       	eor	r22, r22
 3a2:	77 27       	eor	r23, r23
 3a4:	cb 01       	movw	r24, r22
 3a6:	97 f9       	bld	r25, 7
 3a8:	08 95       	ret

000003aa <__mulsf3>:
 3aa:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__mulsf3x>
 3ae:	0c 94 9b 01 	jmp	0x336	; 0x336 <__fp_round>
 3b2:	0e 94 8d 01 	call	0x31a	; 0x31a <__fp_pscA>
 3b6:	38 f0       	brcs	.+14     	; 0x3c6 <__mulsf3+0x1c>
 3b8:	0e 94 94 01 	call	0x328	; 0x328 <__fp_pscB>
 3bc:	20 f0       	brcs	.+8      	; 0x3c6 <__mulsf3+0x1c>
 3be:	95 23       	and	r25, r21
 3c0:	11 f0       	breq	.+4      	; 0x3c6 <__mulsf3+0x1c>
 3c2:	0c 94 84 01 	jmp	0x308	; 0x308 <__fp_inf>
 3c6:	0c 94 8a 01 	jmp	0x314	; 0x314 <__fp_nan>
 3ca:	11 24       	eor	r1, r1
 3cc:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_szero>

000003d0 <__mulsf3x>:
 3d0:	0e 94 ac 01 	call	0x358	; 0x358 <__fp_split3>
 3d4:	70 f3       	brcs	.-36     	; 0x3b2 <__mulsf3+0x8>

000003d6 <__mulsf3_pse>:
 3d6:	95 9f       	mul	r25, r21
 3d8:	c1 f3       	breq	.-16     	; 0x3ca <__mulsf3+0x20>
 3da:	95 0f       	add	r25, r21
 3dc:	50 e0       	ldi	r21, 0x00	; 0
 3de:	55 1f       	adc	r21, r21
 3e0:	62 9f       	mul	r22, r18
 3e2:	f0 01       	movw	r30, r0
 3e4:	72 9f       	mul	r23, r18
 3e6:	bb 27       	eor	r27, r27
 3e8:	f0 0d       	add	r31, r0
 3ea:	b1 1d       	adc	r27, r1
 3ec:	63 9f       	mul	r22, r19
 3ee:	aa 27       	eor	r26, r26
 3f0:	f0 0d       	add	r31, r0
 3f2:	b1 1d       	adc	r27, r1
 3f4:	aa 1f       	adc	r26, r26
 3f6:	64 9f       	mul	r22, r20
 3f8:	66 27       	eor	r22, r22
 3fa:	b0 0d       	add	r27, r0
 3fc:	a1 1d       	adc	r26, r1
 3fe:	66 1f       	adc	r22, r22
 400:	82 9f       	mul	r24, r18
 402:	22 27       	eor	r18, r18
 404:	b0 0d       	add	r27, r0
 406:	a1 1d       	adc	r26, r1
 408:	62 1f       	adc	r22, r18
 40a:	73 9f       	mul	r23, r19
 40c:	b0 0d       	add	r27, r0
 40e:	a1 1d       	adc	r26, r1
 410:	62 1f       	adc	r22, r18
 412:	83 9f       	mul	r24, r19
 414:	a0 0d       	add	r26, r0
 416:	61 1d       	adc	r22, r1
 418:	22 1f       	adc	r18, r18
 41a:	74 9f       	mul	r23, r20
 41c:	33 27       	eor	r19, r19
 41e:	a0 0d       	add	r26, r0
 420:	61 1d       	adc	r22, r1
 422:	23 1f       	adc	r18, r19
 424:	84 9f       	mul	r24, r20
 426:	60 0d       	add	r22, r0
 428:	21 1d       	adc	r18, r1
 42a:	82 2f       	mov	r24, r18
 42c:	76 2f       	mov	r23, r22
 42e:	6a 2f       	mov	r22, r26
 430:	11 24       	eor	r1, r1
 432:	9f 57       	subi	r25, 0x7F	; 127
 434:	50 40       	sbci	r21, 0x00	; 0
 436:	9a f0       	brmi	.+38     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 438:	f1 f0       	breq	.+60     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 43a:	88 23       	and	r24, r24
 43c:	4a f0       	brmi	.+18     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 43e:	ee 0f       	add	r30, r30
 440:	ff 1f       	adc	r31, r31
 442:	bb 1f       	adc	r27, r27
 444:	66 1f       	adc	r22, r22
 446:	77 1f       	adc	r23, r23
 448:	88 1f       	adc	r24, r24
 44a:	91 50       	subi	r25, 0x01	; 1
 44c:	50 40       	sbci	r21, 0x00	; 0
 44e:	a9 f7       	brne	.-22     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 450:	9e 3f       	cpi	r25, 0xFE	; 254
 452:	51 05       	cpc	r21, r1
 454:	80 f0       	brcs	.+32     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 456:	0c 94 84 01 	jmp	0x308	; 0x308 <__fp_inf>
 45a:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_szero>
 45e:	5f 3f       	cpi	r21, 0xFF	; 255
 460:	e4 f3       	brlt	.-8      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 462:	98 3e       	cpi	r25, 0xE8	; 232
 464:	d4 f3       	brlt	.-12     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 466:	86 95       	lsr	r24
 468:	77 95       	ror	r23
 46a:	67 95       	ror	r22
 46c:	b7 95       	ror	r27
 46e:	f7 95       	ror	r31
 470:	e7 95       	ror	r30
 472:	9f 5f       	subi	r25, 0xFF	; 255
 474:	c1 f7       	brne	.-16     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 476:	fe 2b       	or	r31, r30
 478:	88 0f       	add	r24, r24
 47a:	91 1d       	adc	r25, r1
 47c:	96 95       	lsr	r25
 47e:	87 95       	ror	r24
 480:	97 f9       	bld	r25, 7
 482:	08 95       	ret

00000484 <_exit>:
 484:	f8 94       	cli

00000486 <__stop_program>:
 486:	ff cf       	rjmp	.-2      	; 0x486 <__stop_program>

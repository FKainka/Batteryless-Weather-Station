
PowerSupervisor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00803f00  00000fde  00001092  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f28  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b6  00008f28  00000f28  00000fdc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000034  00803f12  00803f12  000010a4  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  000010a4  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001100  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000090  00000000  00000000  0000113c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002492  00000000  00000000  000011cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000014b9  00000000  00000000  0000365e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000792  00000000  00000000  00004b17  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001f8  00000000  00000000  000052ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001687  00000000  00000000  000054a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000005b8  00000000  00000000  00006b2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000098  00000000  00000000  000070e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	34 c1       	rjmp	.+616    	; 0x270 <__vector_3>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	43 c1       	rjmp	.+646    	; 0x294 <__vector_6>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
  40:	1f e3       	ldi	r17, 0x3F	; 63
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	bf e3       	ldi	r27, 0x3F	; 63
  46:	ee ed       	ldi	r30, 0xDE	; 222
  48:	ff e0       	ldi	r31, 0x0F	; 15
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a2 31       	cpi	r26, 0x12	; 18
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	2f e3       	ldi	r18, 0x3F	; 63
  58:	a2 e1       	ldi	r26, 0x12	; 18
  5a:	bf e3       	ldi	r27, 0x3F	; 63
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a6 34       	cpi	r26, 0x46	; 70
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	c4 d1       	rcall	.+904    	; 0x3f0 <main>
  68:	5d c7       	rjmp	.+3770   	; 0xf24 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <_Z11readVoltagev>:
str_config config ={0x02,0b00000001,4000,2500,30};
str_voltage voltage = {CMD_SEND_VOLTAGE,0,""};


void rtcDisable(){
	RTC.CTRLA = 0;
  6c:	e0 e0       	ldi	r30, 0x00	; 0
  6e:	f6 e0       	ldi	r31, 0x06	; 6
  70:	83 e0       	ldi	r24, 0x03	; 3
  72:	80 83       	st	Z, r24
  74:	80 85       	ldd	r24, Z+8	; 0x08
  76:	81 60       	ori	r24, 0x01	; 1
  78:	80 87       	std	Z+8, r24	; 0x08
  7a:	83 85       	ldd	r24, Z+11	; 0x0b
  7c:	88 23       	and	r24, r24
  7e:	e9 f3       	breq	.-6      	; 0x7a <_Z11readVoltagev+0xe>
  80:	e0 e0       	ldi	r30, 0x00	; 0
  82:	f6 e0       	ldi	r31, 0x06	; 6
  84:	60 89       	ldd	r22, Z+16	; 0x10
  86:	71 89       	ldd	r23, Z+17	; 0x11
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	83 87       	std	Z+11, r24	; 0x0b
  8c:	80 e0       	ldi	r24, 0x00	; 0
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	7c d3       	rcall	.+1784   	; 0x78a <__floatunsisf>
  92:	9b 01       	movw	r18, r22
  94:	ac 01       	movw	r20, r24
  96:	6d ec       	ldi	r22, 0xCD	; 205
  98:	7c ec       	ldi	r23, 0xCC	; 204
  9a:	8c e8       	ldi	r24, 0x8C	; 140
  9c:	94 e4       	ldi	r25, 0x44	; 68
  9e:	d4 d2       	rcall	.+1448   	; 0x648 <__divsf3>
  a0:	20 e0       	ldi	r18, 0x00	; 0
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	4a e7       	ldi	r20, 0x7A	; 122
  a6:	54 e4       	ldi	r21, 0x44	; 68
  a8:	fe d3       	rcall	.+2044   	; 0x8a6 <__mulsf3>
  aa:	40 d3       	rcall	.+1664   	; 0x72c <__fixunssfsi>
  ac:	cb 01       	movw	r24, r22
  ae:	08 95       	ret

000000b0 <_Z7initAdcv>:
  b0:	80 e1       	ldi	r24, 0x10	; 16
  b2:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
  b6:	e0 e0       	ldi	r30, 0x00	; 0
  b8:	f6 e0       	ldi	r31, 0x06	; 6
  ba:	8d e1       	ldi	r24, 0x1D	; 29
  bc:	86 83       	std	Z+6, r24	; 0x06
  be:	81 e1       	ldi	r24, 0x11	; 17
  c0:	82 83       	std	Z+2, r24	; 0x02
  c2:	08 95       	ret

000000c4 <_Z6serialj>:
  c4:	e0 e0       	ldi	r30, 0x00	; 0
  c6:	f4 e0       	ldi	r31, 0x04	; 4
  c8:	20 e4       	ldi	r18, 0x40	; 64
  ca:	21 83       	std	Z+1, r18	; 0x01
  cc:	20 e8       	ldi	r18, 0x80	; 128
  ce:	22 83       	std	Z+2, r18	; 0x02
  d0:	bc 01       	movw	r22, r24
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	59 d3       	rcall	.+1714   	; 0x78a <__floatunsisf>
  d8:	20 e0       	ldi	r18, 0x00	; 0
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	40 e8       	ldi	r20, 0x80	; 128
  de:	51 e4       	ldi	r21, 0x41	; 65
  e0:	e2 d3       	rcall	.+1988   	; 0x8a6 <__mulsf3>
  e2:	9b 01       	movw	r18, r22
  e4:	ac 01       	movw	r20, r24
  e6:	60 e0       	ldi	r22, 0x00	; 0
  e8:	74 e2       	ldi	r23, 0x24	; 36
  ea:	84 ef       	ldi	r24, 0xF4	; 244
  ec:	9c e4       	ldi	r25, 0x4C	; 76
  ee:	ac d2       	rcall	.+1368   	; 0x648 <__divsf3>
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	40 e0       	ldi	r20, 0x00	; 0
  f6:	5f e3       	ldi	r21, 0x3F	; 63
  f8:	3b d2       	rcall	.+1142   	; 0x570 <__addsf3>
  fa:	18 d3       	rcall	.+1584   	; 0x72c <__fixunssfsi>
  fc:	e0 e0       	ldi	r30, 0x00	; 0
  fe:	f8 e0       	ldi	r31, 0x08	; 8
 100:	60 87       	std	Z+8, r22	; 0x08
 102:	71 87       	std	Z+9, r23	; 0x09
 104:	86 81       	ldd	r24, Z+6	; 0x06
 106:	80 6c       	ori	r24, 0xC0	; 192
 108:	86 83       	std	Z+6, r24	; 0x06
 10a:	08 95       	ret

0000010c <_Z8sendCharc>:
 10c:	e0 e0       	ldi	r30, 0x00	; 0
 10e:	f8 e0       	ldi	r31, 0x08	; 8
 110:	94 81       	ldd	r25, Z+4	; 0x04
 112:	95 ff       	sbrs	r25, 5
 114:	fd cf       	rjmp	.-6      	; 0x110 <_Z8sendCharc+0x4>
 116:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__TEXT_REGION_LENGTH__+0x700802>
 11a:	08 95       	ret

0000011c <_Z10sendStringPc>:
 11c:	ef 92       	push	r14
 11e:	ff 92       	push	r15
 120:	0f 93       	push	r16
 122:	1f 93       	push	r17
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	8c 01       	movw	r16, r24
 12a:	7c 01       	movw	r14, r24
 12c:	c0 e0       	ldi	r28, 0x00	; 0
 12e:	d0 e0       	ldi	r29, 0x00	; 0
 130:	f8 01       	movw	r30, r16
 132:	01 90       	ld	r0, Z+
 134:	00 20       	and	r0, r0
 136:	e9 f7       	brne	.-6      	; 0x132 <_Z10sendStringPc+0x16>
 138:	31 97       	sbiw	r30, 0x01	; 1
 13a:	e0 1b       	sub	r30, r16
 13c:	f1 0b       	sbc	r31, r17
 13e:	ce 17       	cp	r28, r30
 140:	df 07       	cpc	r29, r31
 142:	30 f4       	brcc	.+12     	; 0x150 <_Z10sendStringPc+0x34>
 144:	f7 01       	movw	r30, r14
 146:	81 91       	ld	r24, Z+
 148:	7f 01       	movw	r14, r30
 14a:	e0 df       	rcall	.-64     	; 0x10c <_Z8sendCharc>
 14c:	21 96       	adiw	r28, 0x01	; 1
 14e:	f0 cf       	rjmp	.-32     	; 0x130 <_Z10sendStringPc+0x14>
 150:	df 91       	pop	r29
 152:	cf 91       	pop	r28
 154:	1f 91       	pop	r17
 156:	0f 91       	pop	r16
 158:	ff 90       	pop	r15
 15a:	ef 90       	pop	r14
 15c:	08 95       	ret

0000015e <_Z10sendBufferPcj>:
 15e:	0f 93       	push	r16
 160:	1f 93       	push	r17
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	61 15       	cp	r22, r1
 168:	71 05       	cpc	r23, r1
 16a:	49 f0       	breq	.+18     	; 0x17e <_Z10sendBufferPcj+0x20>
 16c:	8c 01       	movw	r16, r24
 16e:	ec 01       	movw	r28, r24
 170:	06 0f       	add	r16, r22
 172:	17 1f       	adc	r17, r23
 174:	89 91       	ld	r24, Y+
 176:	ca df       	rcall	.-108    	; 0x10c <_Z8sendCharc>
 178:	c0 17       	cp	r28, r16
 17a:	d1 07       	cpc	r29, r17
 17c:	d9 f7       	brne	.-10     	; 0x174 <_Z10sendBufferPcj+0x16>
 17e:	df 91       	pop	r29
 180:	cf 91       	pop	r28
 182:	1f 91       	pop	r17
 184:	0f 91       	pop	r16
 186:	08 95       	ret

00000188 <_Z11receiveCharv>:
 188:	e0 e0       	ldi	r30, 0x00	; 0
 18a:	f8 e0       	ldi	r31, 0x08	; 8
 18c:	84 81       	ldd	r24, Z+4	; 0x04
 18e:	88 23       	and	r24, r24
 190:	2c f0       	brlt	.+10     	; 0x19c <_Z11receiveCharv+0x14>
 192:	80 91 45 3f 	lds	r24, 0x3F45	; 0x803f45 <stopSerialRecieve>
 196:	88 23       	and	r24, r24
 198:	c9 f3       	breq	.-14     	; 0x18c <_Z11receiveCharv+0x4>
 19a:	03 c0       	rjmp	.+6      	; 0x1a2 <_Z11receiveCharv+0x1a>
 19c:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
 1a0:	08 95       	ret
 1a2:	8f ef       	ldi	r24, 0xFF	; 255
 1a4:	08 95       	ret

000001a6 <_Z13receiveStringPch>:
 1a6:	ef 92       	push	r14
 1a8:	ff 92       	push	r15
 1aa:	1f 93       	push	r17
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	ec 01       	movw	r28, r24
 1b2:	e6 2e       	mov	r14, r22
 1b4:	e9 df       	rcall	.-46     	; 0x188 <_Z11receiveCharv>
 1b6:	8a 30       	cpi	r24, 0x0A	; 10
 1b8:	d1 f0       	breq	.+52     	; 0x1ee <_Z13receiveStringPch+0x48>
 1ba:	8f 3f       	cpi	r24, 0xFF	; 255
 1bc:	c1 f0       	breq	.+48     	; 0x1ee <_Z13receiveStringPch+0x48>
 1be:	f1 2c       	mov	r15, r1
 1c0:	91 e0       	ldi	r25, 0x01	; 1
 1c2:	e9 1a       	sub	r14, r25
 1c4:	f1 08       	sbc	r15, r1
 1c6:	1e 14       	cp	r1, r14
 1c8:	1f 04       	cpc	r1, r15
 1ca:	8c f4       	brge	.+34     	; 0x1ee <_Z13receiveStringPch+0x48>
 1cc:	10 e0       	ldi	r17, 0x00	; 0
 1ce:	07 c0       	rjmp	.+14     	; 0x1de <_Z13receiveStringPch+0x38>
 1d0:	8f 3f       	cpi	r24, 0xFF	; 255
 1d2:	69 f0       	breq	.+26     	; 0x1ee <_Z13receiveStringPch+0x48>
 1d4:	21 2f       	mov	r18, r17
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	2e 15       	cp	r18, r14
 1da:	3f 05       	cpc	r19, r15
 1dc:	44 f4       	brge	.+16     	; 0x1ee <_Z13receiveStringPch+0x48>
 1de:	21 96       	adiw	r28, 0x01	; 1
 1e0:	fe 01       	movw	r30, r28
 1e2:	31 97       	sbiw	r30, 0x01	; 1
 1e4:	80 83       	st	Z, r24
 1e6:	1f 5f       	subi	r17, 0xFF	; 255
 1e8:	cf df       	rcall	.-98     	; 0x188 <_Z11receiveCharv>
 1ea:	8a 30       	cpi	r24, 0x0A	; 10
 1ec:	89 f7       	brne	.-30     	; 0x1d0 <_Z13receiveStringPch+0x2a>
 1ee:	18 82       	st	Y, r1
 1f0:	df 91       	pop	r29
 1f2:	cf 91       	pop	r28
 1f4:	1f 91       	pop	r17
 1f6:	ff 90       	pop	r15
 1f8:	ef 90       	pop	r14
 1fa:	08 95       	ret

000001fc <_Z9rtcEnablej>:
}


void rtcEnable(uint16_t sleep_duration){
	while (RTC.STATUS > 0) {} // Wait for all register to be synchronized
 1fc:	e0 e4       	ldi	r30, 0x40	; 64
 1fe:	f1 e0       	ldi	r31, 0x01	; 1
 200:	91 81       	ldd	r25, Z+1	; 0x01
 202:	91 11       	cpse	r25, r1
 204:	fd cf       	rjmp	.-6      	; 0x200 <_Z9rtcEnablej+0x4>

	RTC.PER = 1024*sleep_duration; //in seconds
 206:	20 e0       	ldi	r18, 0x00	; 0
 208:	30 e0       	ldi	r19, 0x00	; 0
 20a:	38 2f       	mov	r19, r24
 20c:	33 0f       	add	r19, r19
 20e:	33 0f       	add	r19, r19
 210:	e0 e4       	ldi	r30, 0x40	; 64
 212:	f1 e0       	ldi	r31, 0x01	; 1
 214:	22 87       	std	Z+10, r18	; 0x0a
 216:	33 87       	std	Z+11, r19	; 0x0b
	RTC.INTCTRL = 0 << RTC_CMP_bp
	| 1 << RTC_OVF_bp; //Overflow interrupt.
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	82 83       	std	Z+2, r24	; 0x02
	
	RTC.CTRLA = RTC_PRESCALER_DIV1_gc	//NO Prescaler
	| 1 << RTC_RTCEN_bp       	//Enable RTC
	| 1 << RTC_RUNSTDBY_bp;   	//Run in standby
 21c:	91 e8       	ldi	r25, 0x81	; 129
 21e:	90 83       	st	Z, r25

	RTC.CLKSEL = RTC_CLKSEL_INT1K_gc; // 32KHz divided by 32, i.e run at 1.024kHz
 220:	87 83       	std	Z+7, r24	; 0x07
 222:	08 95       	ret

00000224 <_Z5setupv>:
}

void setup(){
	#if F_CPU == 2000000
	_PROTECTED_WRITE(CLKCTRL.MCLKCTRLA, CLKCTRL_CLKSEL_OSC20M_gc); 	/* Set the Main clock to internal 20MHz oscillator*/
 224:	88 ed       	ldi	r24, 0xD8	; 216
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	84 bf       	out	0x34, r24	; 52
 22a:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
	_PROTECTED_WRITE(CLKCTRL.MCLKCTRLB, CLKCTRL_PDIV_10X_gc | CLKCTRL_PEN_bm);  	/* Set the Main clock division factor to 6X and keep the Main clock prescaler enabled. */
 22e:	23 e1       	ldi	r18, 0x13	; 19
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	84 bf       	out	0x34, r24	; 52
 234:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x700061>
	_PROTECTED_WRITE(CLKCTRL.MCLKCTRLA, CLKCTRL_CLKSEL_OSC20M_gc); 	/* Set the Main clock to internal 20MHz oscillator*/
	_PROTECTED_WRITE(CLKCTRL.MCLKCTRLB, CLKCTRL_PDIV_32X_gc | CLKCTRL_PEN_bm);  	/* Set the Main clock division factor to 6X and keep the Main clock prescaler enabled. */
	#endif
	
	/* Pin Control */
	PORTA.DIR &= ~ PIN2_bm; //INPUT  PIN A2
 238:	e0 e0       	ldi	r30, 0x00	; 0
 23a:	f4 e0       	ldi	r31, 0x04	; 4
 23c:	80 81       	ld	r24, Z
 23e:	8b 7f       	andi	r24, 0xFB	; 251
 240:	80 83       	st	Z, r24
	PORTA.DIR &= ~ PIN3_bm; //INPUT  PIN A3
 242:	80 81       	ld	r24, Z
 244:	87 7f       	andi	r24, 0xF7	; 247
 246:	80 83       	st	Z, r24
	
	PORTA.PIN2CTRL = PORT_ISC_BOTHEDGES_gc | PORT_PULLUPEN_bm ; 	//Set Interrupt -> both edges ((ToDo: Not Pullup, extern pulldown))
 248:	89 e0       	ldi	r24, 0x09	; 9
 24a:	82 8b       	std	Z+18, r24	; 0x12
	PORTA.PIN3CTRL = PORT_ISC_BOTHEDGES_gc | PORT_PULLUPEN_bm ; 	 // PORT_PULLUPEN_bm|	//Set Interrupt -> both edges
 24c:	83 8b       	std	Z+19, r24	; 0x13
	
	PORTA.DIR |= PIN1_bm;	//OUTPUT PIN A1
 24e:	80 81       	ld	r24, Z
 250:	82 60       	ori	r24, 0x02	; 2
 252:	80 83       	st	Z, r24
	BOARD_OFF; // Start Value =off
 254:	84 81       	ldd	r24, Z+4	; 0x04
 256:	8d 7f       	andi	r24, 0xFD	; 253
 258:	84 83       	std	Z+4, r24	; 0x04
	//PORTn.OUT = 0 = Low
	
	rtcEnable(config.deep_sleep_duration);
 25a:	80 91 10 3f 	lds	r24, 0x3F10	; 0x803f10 <config+0x6>
 25e:	90 91 11 3f 	lds	r25, 0x3F11	; 0x803f11 <config+0x7>
 262:	cc df       	rcall	.-104    	; 0x1fc <_Z9rtcEnablej>
	
	initAdc();
 264:	25 df       	rcall	.-438    	; 0xb0 <_Z7initAdcv>
	readVoltage(); //read once beacause of faulty readings
 266:	02 df       	rcall	.-508    	; 0x6c <_Z11readVoltagev>
	
	
	
	serial(57600);
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	91 ee       	ldi	r25, 0xE1	; 225
 26c:	2b df       	rcall	.-426    	; 0xc4 <_Z6serialj>
 26e:	08 95       	ret

00000270 <__vector_3>:
}

// PINA ISR
ISR(PORTA_PORT_vect)
{
 270:	1f 92       	push	r1
 272:	0f 92       	push	r0
 274:	0f b6       	in	r0, 0x3f	; 63
 276:	0f 92       	push	r0
 278:	11 24       	eor	r1, r1
 27a:	8f 93       	push	r24
	stopSerialRecieve = true;
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	80 93 45 3f 	sts	0x3F45, r24	; 0x803f45 <stopSerialRecieve>
	PORTA_INTFLAGS = 0xFF; //Clear all interrupt flags
 282:	8f ef       	ldi	r24, 0xFF	; 255
 284:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <__TEXT_REGION_LENGTH__+0x700409>
}
 288:	8f 91       	pop	r24
 28a:	0f 90       	pop	r0
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	0f 90       	pop	r0
 290:	1f 90       	pop	r1
 292:	18 95       	reti

00000294 <__vector_6>:

//RTC ISR
ISR(RTC_CNT_vect)
{
 294:	1f 92       	push	r1
 296:	0f 92       	push	r0
 298:	0f b6       	in	r0, 0x3f	; 63
 29a:	0f 92       	push	r0
 29c:	11 24       	eor	r1, r1
 29e:	8f 93       	push	r24
	RTC.INTFLAGS = RTC_OVF_bm;
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x700143>
}
 2a6:	8f 91       	pop	r24
 2a8:	0f 90       	pop	r0
 2aa:	0f be       	out	0x3f, r0	; 63
 2ac:	0f 90       	pop	r0
 2ae:	1f 90       	pop	r1
 2b0:	18 95       	reti

000002b2 <_Z9handleCmdv>:


void handleCmd(){
 2b2:	0f 93       	push	r16
 2b4:	1f 93       	push	r17
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
	receiveString(buffer,CMD_MSG_LEN);
 2ba:	6a e0       	ldi	r22, 0x0A	; 10
 2bc:	82 e1       	ldi	r24, 0x12	; 18
 2be:	9f e3       	ldi	r25, 0x3F	; 63
 2c0:	72 df       	rcall	.-284    	; 0x1a6 <_Z13receiveStringPch>
	switch (buffer[0]){
 2c2:	80 91 12 3f 	lds	r24, 0x3F12	; 0x803f12 <__data_end>
 2c6:	82 30       	cpi	r24, 0x02	; 2
 2c8:	59 f1       	breq	.+86     	; 0x320 <_Z9handleCmdv+0x6e>
 2ca:	83 30       	cpi	r24, 0x03	; 3
 2cc:	09 f4       	brne	.+2      	; 0x2d0 <_Z9handleCmdv+0x1e>
 2ce:	58 c0       	rjmp	.+176    	; 0x380 <_Z9handleCmdv+0xce>
 2d0:	81 30       	cpi	r24, 0x01	; 1
 2d2:	09 f0       	breq	.+2      	; 0x2d6 <_Z9handleCmdv+0x24>
 2d4:	7e c0       	rjmp	.+252    	; 0x3d2 <_Z9handleCmdv+0x120>
		case CMD_SEND_VOLTAGE:
		{
			voltage.voltage = readVoltage();
 2d6:	ca de       	rcall	.-620    	; 0x6c <_Z11readVoltagev>
 2d8:	e0 e0       	ldi	r30, 0x00	; 0
 2da:	ff e3       	ldi	r31, 0x3F	; 63
 2dc:	81 83       	std	Z+1, r24	; 0x01
 2de:	92 83       	std	Z+2, r25	; 0x02
			sprintf(voltage.str, "%dmV",(int)voltage.voltage); //ToDo: Remove? debug only, may cost time
 2e0:	9f 93       	push	r25
 2e2:	8f 93       	push	r24
 2e4:	88 e2       	ldi	r24, 0x28	; 40
 2e6:	9f e8       	ldi	r25, 0x8F	; 143
 2e8:	9f 93       	push	r25
 2ea:	8f 93       	push	r24
 2ec:	83 e0       	ldi	r24, 0x03	; 3
 2ee:	9f e3       	ldi	r25, 0x3F	; 63
 2f0:	9f 93       	push	r25
 2f2:	8f 93       	push	r24
 2f4:	45 d3       	rcall	.+1674   	; 0x980 <sprintf>
			memcpy(buffer, &voltage,sizeof(str_voltage));
 2f6:	8a e0       	ldi	r24, 0x0A	; 10
 2f8:	e0 e0       	ldi	r30, 0x00	; 0
 2fa:	ff e3       	ldi	r31, 0x3F	; 63
 2fc:	a2 e1       	ldi	r26, 0x12	; 18
 2fe:	bf e3       	ldi	r27, 0x3F	; 63
 300:	01 90       	ld	r0, Z+
 302:	0d 92       	st	X+, r0
 304:	8a 95       	dec	r24
 306:	e1 f7       	brne	.-8      	; 0x300 <_Z9handleCmdv+0x4e>
	
			sendBuffer(buffer,sizeof(str_voltage));
 308:	6a e0       	ldi	r22, 0x0A	; 10
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	82 e1       	ldi	r24, 0x12	; 18
 30e:	9f e3       	ldi	r25, 0x3F	; 63
 310:	26 df       	rcall	.-436    	; 0x15e <_Z10sendBufferPcj>
			break;
 312:	0f 90       	pop	r0
 314:	0f 90       	pop	r0
 316:	0f 90       	pop	r0
 318:	0f 90       	pop	r0
 31a:	0f 90       	pop	r0
 31c:	0f 90       	pop	r0
 31e:	63 c0       	rjmp	.+198    	; 0x3e6 <_Z9handleCmdv+0x134>
		}
		case CMD_SET_CONFIG:{
			#ifdef MY_DEBUG
			sendString("CONFIG\n");
 320:	81 e4       	ldi	r24, 0x41	; 65
 322:	9f e8       	ldi	r25, 0x8F	; 143
 324:	fb de       	rcall	.-522    	; 0x11c <_Z10sendStringPc>
			#endif
			str_config *msg = (str_config*)buffer;
			memcpy(&config,msg,sizeof(str_config));
 326:	ca e0       	ldi	r28, 0x0A	; 10
 328:	df e3       	ldi	r29, 0x3F	; 63
 32a:	02 e1       	ldi	r16, 0x12	; 18
 32c:	1f e3       	ldi	r17, 0x3F	; 63
 32e:	88 e0       	ldi	r24, 0x08	; 8
 330:	f8 01       	movw	r30, r16
 332:	de 01       	movw	r26, r28
 334:	01 90       	ld	r0, Z+
 336:	0d 92       	st	X+, r0
 338:	8a 95       	dec	r24
 33a:	e1 f7       	brne	.-8      	; 0x334 <_Z9handleCmdv+0x82>
			
			//print back buffer
			memcpy(buffer, &config,sizeof(str_config));
 33c:	88 e0       	ldi	r24, 0x08	; 8
 33e:	fe 01       	movw	r30, r28
 340:	d8 01       	movw	r26, r16
 342:	01 90       	ld	r0, Z+
 344:	0d 92       	st	X+, r0
 346:	8a 95       	dec	r24
 348:	e1 f7       	brne	.-8      	; 0x342 <_Z9handleCmdv+0x90>
			sendBuffer(buffer,sizeof(str_config));
 34a:	68 e0       	ldi	r22, 0x08	; 8
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	c8 01       	movw	r24, r16
 350:	06 df       	rcall	.-500    	; 0x15e <_Z10sendBufferPcj>

			#ifdef MY_DEBUG
			
			sprintf(buffer,"H_H:%d, H_L:%d\n",(int)config.hyst_on,(int)config.hyst_off);		//ToDo Remove Debug
 352:	8d 81       	ldd	r24, Y+5	; 0x05
 354:	8f 93       	push	r24
 356:	8c 81       	ldd	r24, Y+4	; 0x04
 358:	8f 93       	push	r24
 35a:	8b 81       	ldd	r24, Y+3	; 0x03
 35c:	8f 93       	push	r24
 35e:	8a 81       	ldd	r24, Y+2	; 0x02
 360:	8f 93       	push	r24
 362:	8d e2       	ldi	r24, 0x2D	; 45
 364:	9f e8       	ldi	r25, 0x8F	; 143
 366:	9f 93       	push	r25
 368:	8f 93       	push	r24
 36a:	1f 93       	push	r17
 36c:	0f 93       	push	r16
 36e:	08 d3       	rcall	.+1552   	; 0x980 <sprintf>
			sendString(buffer);
 370:	c8 01       	movw	r24, r16
 372:	d4 de       	rcall	.-600    	; 0x11c <_Z10sendStringPc>
			#endif
			break;
 374:	8d b7       	in	r24, 0x3d	; 61
 376:	9e b7       	in	r25, 0x3e	; 62
 378:	08 96       	adiw	r24, 0x08	; 8
 37a:	8d bf       	out	0x3d, r24	; 61
 37c:	9e bf       	out	0x3e, r25	; 62
 37e:	33 c0       	rjmp	.+102    	; 0x3e6 <_Z9handleCmdv+0x134>
		}
		case CMD_GET_CONFIG:{
			#ifdef MY_DEBUG
			sendString("GET CONFIG\n");
 380:	8d e3       	ldi	r24, 0x3D	; 61
 382:	9f e8       	ldi	r25, 0x8F	; 143
 384:	cb de       	rcall	.-618    	; 0x11c <_Z10sendStringPc>
			#endif
			//str_config *msg = (str_config*)buffer;
			memcpy(buffer, &config,sizeof(str_config));
 386:	02 e1       	ldi	r16, 0x12	; 18
 388:	1f e3       	ldi	r17, 0x3F	; 63
 38a:	ca e0       	ldi	r28, 0x0A	; 10
 38c:	df e3       	ldi	r29, 0x3F	; 63
 38e:	88 e0       	ldi	r24, 0x08	; 8
 390:	fe 01       	movw	r30, r28
 392:	d8 01       	movw	r26, r16
 394:	01 90       	ld	r0, Z+
 396:	0d 92       	st	X+, r0
 398:	8a 95       	dec	r24
 39a:	e1 f7       	brne	.-8      	; 0x394 <_Z9handleCmdv+0xe2>
			sendBuffer(buffer,sizeof(str_config));
 39c:	68 e0       	ldi	r22, 0x08	; 8
 39e:	70 e0       	ldi	r23, 0x00	; 0
 3a0:	c8 01       	movw	r24, r16
 3a2:	dd de       	rcall	.-582    	; 0x15e <_Z10sendBufferPcj>
			#ifdef MY_DEBUG
			sprintf(buffer,"H_H:%d, H_L:%d\n",(int)config.hyst_on,(int)config.hyst_off); 	//ToDo Remove Debug
 3a4:	8d 81       	ldd	r24, Y+5	; 0x05
 3a6:	8f 93       	push	r24
 3a8:	8c 81       	ldd	r24, Y+4	; 0x04
 3aa:	8f 93       	push	r24
 3ac:	8b 81       	ldd	r24, Y+3	; 0x03
 3ae:	8f 93       	push	r24
 3b0:	8a 81       	ldd	r24, Y+2	; 0x02
 3b2:	8f 93       	push	r24
 3b4:	8d e2       	ldi	r24, 0x2D	; 45
 3b6:	9f e8       	ldi	r25, 0x8F	; 143
 3b8:	9f 93       	push	r25
 3ba:	8f 93       	push	r24
 3bc:	1f 93       	push	r17
 3be:	0f 93       	push	r16
 3c0:	df d2       	rcall	.+1470   	; 0x980 <sprintf>
			sendString(buffer);
 3c2:	c8 01       	movw	r24, r16
 3c4:	ab de       	rcall	.-682    	; 0x11c <_Z10sendStringPc>
			#endif
			break;
 3c6:	8d b7       	in	r24, 0x3d	; 61
 3c8:	9e b7       	in	r25, 0x3e	; 62
 3ca:	08 96       	adiw	r24, 0x08	; 8
 3cc:	8d bf       	out	0x3d, r24	; 61
 3ce:	9e bf       	out	0x3e, r25	; 62
 3d0:	0a c0       	rjmp	.+20     	; 0x3e6 <_Z9handleCmdv+0x134>
		}
		default:{
			buffer[0] = 0xff;
 3d2:	e2 e1       	ldi	r30, 0x12	; 18
 3d4:	ff e3       	ldi	r31, 0x3F	; 63
 3d6:	8f ef       	ldi	r24, 0xFF	; 255
 3d8:	80 83       	st	Z, r24
			buffer[1] = '\0';
 3da:	11 82       	std	Z+1, r1	; 0x01
			sendString(buffer);
 3dc:	cf 01       	movw	r24, r30
 3de:	9e de       	rcall	.-708    	; 0x11c <_Z10sendStringPc>
			#ifdef MY_DEBUG
			sendString("UNKNOWN\n");
 3e0:	89 e4       	ldi	r24, 0x49	; 73
 3e2:	9f e8       	ldi	r25, 0x8F	; 143
 3e4:	9b de       	rcall	.-714    	; 0x11c <_Z10sendStringPc>
			#endif
		}
	}
}
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	0f 91       	pop	r16
 3ee:	08 95       	ret

000003f0 <main>:

int main(void){
	setup();
 3f0:	19 df       	rcall	.-462    	; 0x224 <_Z5setupv>
	uint16_t volt = 0;
	#ifdef MY_DEBUG
	sendString("\n\nSTART\n");
 3f2:	82 e5       	ldi	r24, 0x52	; 82
 3f4:	9f e8       	ldi	r25, 0x8F	; 143
 3f6:	92 de       	rcall	.-732    	; 0x11c <_Z10sendStringPc>
	while (1)
	{
		ATOMIC_BLOCK(ATOMIC_FORCEON)
		{
			_delay_ms(50); //wait till read and debounce
			mode =(~PORTA.IN & PINA2MODE); //determine mode; Invet -> low = AKTIVE
 3f8:	e1 2c       	mov	r14, r1
 3fa:	68 94       	set
 3fc:	ff 24       	eor	r15, r15
 3fe:	f2 f8       	bld	r15, 2
			volt = readVoltage();
			#ifdef MY_DEBUG
			sprintf(buffer,"\nMode: %d, PORTA %d Volt:%d\n", mode, PORTA.IN,volt);
 400:	0f 2e       	mov	r0, r31
 402:	fb e5       	ldi	r31, 0x5B	; 91
 404:	8f 2e       	mov	r8, r31
 406:	ff e8       	ldi	r31, 0x8F	; 143
 408:	9f 2e       	mov	r9, r31
 40a:	f0 2d       	mov	r31, r0
 40c:	0f 2e       	mov	r0, r31
 40e:	f2 e1       	ldi	r31, 0x12	; 18
 410:	cf 2e       	mov	r12, r31
 412:	ff e3       	ldi	r31, 0x3F	; 63
 414:	df 2e       	mov	r13, r31
 416:	f0 2d       	mov	r31, r0
		if (mode == MODE_SLEEP){
			#ifdef MY_DEBUG
			sendString("Mode: SLEEP\n");
			#endif
			
			if (config.mode & 0b00000001){ //mode with min Threshold
 418:	0f 2e       	mov	r0, r31
 41a:	fa e0       	ldi	r31, 0x0A	; 10
 41c:	af 2e       	mov	r10, r31
 41e:	ff e3       	ldi	r31, 0x3F	; 63
 420:	bf 2e       	mov	r11, r31
 422:	f0 2d       	mov	r31, r0
				#ifdef MY_DEBUG
				sendString("GOTO DEEP SLEEP\n");
				_delay_ms(10);
				#endif
				//rtcDisable();
				set_sleep_mode(SLEEP_MODE_PWR_DOWN); //Setting Sleep Mode (deepest) -Y 3uA??? should be lower
 424:	c0 e5       	ldi	r28, 0x50	; 80
 426:	d0 e0       	ldi	r29, 0x00	; 0
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
 428:	f8 94       	cli
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 42a:	83 ed       	ldi	r24, 0xD3	; 211
 42c:	90 e3       	ldi	r25, 0x30	; 48
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 434:	00 00       	nop
	while (1)
	{
		ATOMIC_BLOCK(ATOMIC_FORCEON)
		{
			_delay_ms(50); //wait till read and debounce
			mode =(~PORTA.IN & PINA2MODE); //determine mode; Invet -> low = AKTIVE
 436:	f7 01       	movw	r30, r14
 438:	80 85       	ldd	r24, Z+8	; 0x08
 43a:	80 95       	com	r24
 43c:	8c 70       	andi	r24, 0x0C	; 12
 43e:	80 93 44 3f 	sts	0x3F44, r24	; 0x803f44 <mode>
			volt = readVoltage();
 442:	14 de       	rcall	.-984    	; 0x6c <_Z11readVoltagev>
 444:	8c 01       	movw	r16, r24
			#ifdef MY_DEBUG
			sprintf(buffer,"\nMode: %d, PORTA %d Volt:%d\n", mode, PORTA.IN,volt);
 446:	f7 01       	movw	r30, r14
 448:	90 85       	ldd	r25, Z+8	; 0x08
 44a:	80 91 44 3f 	lds	r24, 0x3F44	; 0x803f44 <mode>
 44e:	1f 93       	push	r17
 450:	0f 93       	push	r16
 452:	1f 92       	push	r1
 454:	9f 93       	push	r25
 456:	1f 92       	push	r1
 458:	8f 93       	push	r24
 45a:	9f 92       	push	r9
 45c:	8f 92       	push	r8
 45e:	df 92       	push	r13
 460:	cf 92       	push	r12
 462:	8e d2       	rcall	.+1308   	; 0x980 <sprintf>
			sendString(buffer);
 464:	c6 01       	movw	r24, r12
 466:	5a de       	rcall	.-844    	; 0x11c <_Z10sendStringPc>
			#endif
			
			stopSerialRecieve = false;
 468:	10 92 45 3f 	sts	0x3F45, r1	; 0x803f45 <stopSerialRecieve>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
 46c:	78 94       	sei
		}
		sei(); //enable Interrupts
 46e:	78 94       	sei
			msg->mode = mode;
			sendBuffer(buffer,sizeof(str_voltage));
			break;
		}*/
		
		if(mode >= MODE_AWAIK ){
 470:	80 91 44 3f 	lds	r24, 0x3F44	; 0x803f44 <mode>
 474:	2d b7       	in	r18, 0x3d	; 61
 476:	3e b7       	in	r19, 0x3e	; 62
 478:	26 5f       	subi	r18, 0xF6	; 246
 47a:	3f 4f       	sbci	r19, 0xFF	; 255
 47c:	2d bf       	out	0x3d, r18	; 61
 47e:	3e bf       	out	0x3e, r19	; 62
 480:	88 30       	cpi	r24, 0x08	; 8
 482:	20 f0       	brcs	.+8      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
			#ifdef MY_DEBUG
			sendString("Mode: AWAIK\n");
 484:	88 e7       	ldi	r24, 0x78	; 120
 486:	9f e8       	ldi	r25, 0x8F	; 143
 488:	49 de       	rcall	.-878    	; 0x11c <_Z10sendStringPc>
			#endif
			//rtcDisable();
			handleCmd();
 48a:	13 df       	rcall	.-474    	; 0x2b2 <_Z9handleCmdv>
		}
		if (mode == MODE_SLEEP){
 48c:	80 91 44 3f 	lds	r24, 0x3F44	; 0x803f44 <mode>
 490:	84 30       	cpi	r24, 0x04	; 4
 492:	99 f5       	brne	.+102    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
			#ifdef MY_DEBUG
			sendString("Mode: SLEEP\n");
 494:	85 e8       	ldi	r24, 0x85	; 133
 496:	9f e8       	ldi	r25, 0x8F	; 143
 498:	41 de       	rcall	.-894    	; 0x11c <_Z10sendStringPc>
			#endif
			
			if (config.mode & 0b00000001){ //mode with min Threshold
 49a:	f5 01       	movw	r30, r10
 49c:	81 81       	ldd	r24, Z+1	; 0x01
 49e:	80 ff       	sbrs	r24, 0
 4a0:	18 c0       	rjmp	.+48     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
				if (volt<config.hyst_off){
 4a2:	84 81       	ldd	r24, Z+4	; 0x04
 4a4:	95 81       	ldd	r25, Z+5	; 0x05
 4a6:	08 17       	cp	r16, r24
 4a8:	19 07       	cpc	r17, r25
 4aa:	38 f4       	brcc	.+14     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
					#ifdef MY_DEBUG
					sendString("DEAKTIVATE BOARD - LOW VOLTAGE\n");
 4ac:	82 e9       	ldi	r24, 0x92	; 146
 4ae:	9f e8       	ldi	r25, 0x8F	; 143
 4b0:	35 de       	rcall	.-918    	; 0x11c <_Z10sendStringPc>
					#endif
					BOARD_OFF;
 4b2:	f7 01       	movw	r30, r14
 4b4:	84 81       	ldd	r24, Z+4	; 0x04
 4b6:	8d 7f       	andi	r24, 0xFD	; 253
 4b8:	84 83       	std	Z+4, r24	; 0x04
				}
				//if (!(RTC.CTRLA & 0b00000001))rtcEnable(config.deep_sleep_duration);
				set_sleep_mode(SLEEP_MODE_STANDBY);//SLEEP_MODE_PWR_DOWN); //Setting Sleep Mode (Standby: RTC)
 4ba:	88 81       	ld	r24, Y
 4bc:	89 7f       	andi	r24, 0xF9	; 249
 4be:	82 60       	ori	r24, 0x02	; 2
 4c0:	88 83       	st	Y, r24
				sleep_mode(); //GoTo Deep sleep
 4c2:	88 81       	ld	r24, Y
 4c4:	81 60       	ori	r24, 0x01	; 1
 4c6:	88 83       	st	Y, r24
 4c8:	88 95       	sleep
 4ca:	88 81       	ld	r24, Y
 4cc:	8e 7f       	andi	r24, 0xFE	; 254
 4ce:	88 83       	st	Y, r24
 4d0:	14 c0       	rjmp	.+40     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
			}
			else{
				#ifdef MY_DEBUG
				sendString("GOTO DEEP SLEEP\n");
 4d2:	82 eb       	ldi	r24, 0xB2	; 178
 4d4:	9f e8       	ldi	r25, 0x8F	; 143
 4d6:	22 de       	rcall	.-956    	; 0x11c <_Z10sendStringPc>
 4d8:	83 ec       	ldi	r24, 0xC3	; 195
 4da:	99 e0       	ldi	r25, 0x09	; 9
 4dc:	01 97       	sbiw	r24, 0x01	; 1
 4de:	f1 f7       	brne	.-4      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4e0:	00 c0       	rjmp	.+0      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4e2:	00 00       	nop
				_delay_ms(10);
				#endif
				//rtcDisable();
				set_sleep_mode(SLEEP_MODE_PWR_DOWN); //Setting Sleep Mode (deepest) -Y 3uA??? should be lower
 4e4:	88 81       	ld	r24, Y
 4e6:	89 7f       	andi	r24, 0xF9	; 249
 4e8:	84 60       	ori	r24, 0x04	; 4
 4ea:	88 83       	st	Y, r24
				sleep_mode(); //GoTo Deep sleep
 4ec:	88 81       	ld	r24, Y
 4ee:	81 60       	ori	r24, 0x01	; 1
 4f0:	88 83       	st	Y, r24
 4f2:	88 95       	sleep
 4f4:	88 81       	ld	r24, Y
 4f6:	8e 7f       	andi	r24, 0xFE	; 254
 4f8:	88 83       	st	Y, r24
			}
		}
		if (mode == MODE_OFF){
 4fa:	80 91 44 3f 	lds	r24, 0x3F44	; 0x803f44 <mode>
 4fe:	81 11       	cpse	r24, r1
 500:	93 cf       	rjmp	.-218    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
			#ifdef MY_DEBUG
			sendString("Mode: OFF\n");	
 502:	83 ec       	ldi	r24, 0xC3	; 195
 504:	9f e8       	ldi	r25, 0x8F	; 143
 506:	0a de       	rcall	.-1004   	; 0x11c <_Z10sendStringPc>
 508:	e3 ec       	ldi	r30, 0xC3	; 195
 50a:	f9 e0       	ldi	r31, 0x09	; 9
 50c:	31 97       	sbiw	r30, 0x01	; 1
 50e:	f1 f7       	brne	.-4      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 510:	00 c0       	rjmp	.+0      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 512:	00 00       	nop
			_delay_ms(10);
			#endif
			if (volt>=config.hyst_on){
 514:	f5 01       	movw	r30, r10
 516:	82 81       	ldd	r24, Z+2	; 0x02
 518:	93 81       	ldd	r25, Z+3	; 0x03
 51a:	08 17       	cp	r16, r24
 51c:	19 07       	cpc	r17, r25
 51e:	88 f0       	brcs	.+34     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
				#ifdef MY_DEBUG
				sendString("AKTIVATE BOARD\n");
 520:	8e ec       	ldi	r24, 0xCE	; 206
 522:	9f e8       	ldi	r25, 0x8F	; 143
 524:	fb dd       	rcall	.-1034   	; 0x11c <_Z10sendStringPc>
 526:	83 ec       	ldi	r24, 0xC3	; 195
 528:	99 e0       	ldi	r25, 0x09	; 9
 52a:	01 97       	sbiw	r24, 0x01	; 1
 52c:	f1 f7       	brne	.-4      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 52e:	00 c0       	rjmp	.+0      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 530:	00 00       	nop
				_delay_ms(10);
				#endif
				BOARD_ON;
 532:	f7 01       	movw	r30, r14
 534:	84 81       	ldd	r24, Z+4	; 0x04
 536:	82 60       	ori	r24, 0x02	; 2
 538:	84 83       	std	Z+4, r24	; 0x04
 53a:	94 81       	ldd	r25, Z+4	; 0x04
 53c:	89 23       	and	r24, r25
 53e:	84 83       	std	Z+4, r24	; 0x04
 540:	0a c0       	rjmp	.+20     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
			}
			else if (volt<config.hyst_off){
 542:	f5 01       	movw	r30, r10
 544:	84 81       	ldd	r24, Z+4	; 0x04
 546:	95 81       	ldd	r25, Z+5	; 0x05
 548:	08 17       	cp	r16, r24
 54a:	19 07       	cpc	r17, r25
 54c:	20 f4       	brcc	.+8      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
				BOARD_OFF;
 54e:	f7 01       	movw	r30, r14
 550:	84 81       	ldd	r24, Z+4	; 0x04
 552:	8d 7f       	andi	r24, 0xFD	; 253
 554:	84 83       	std	Z+4, r24	; 0x04
			}
			
			//if (!(RTC.CTRLA & 0b00000001))rtcEnable(config.deep_sleep_duration);
			set_sleep_mode(SLEEP_MODE_STANDBY);//SLEEP_MODE_PWR_DOWN); //Setting Sleep Mode (Standby: RTC)
 556:	88 81       	ld	r24, Y
 558:	89 7f       	andi	r24, 0xF9	; 249
 55a:	82 60       	ori	r24, 0x02	; 2
 55c:	88 83       	st	Y, r24
			sleep_mode(); //GoTo Deep sleep
 55e:	88 81       	ld	r24, Y
 560:	81 60       	ori	r24, 0x01	; 1
 562:	88 83       	st	Y, r24
 564:	88 95       	sleep
 566:	88 81       	ld	r24, Y
 568:	8e 7f       	andi	r24, 0xFE	; 254
 56a:	88 83       	st	Y, r24
 56c:	5d cf       	rjmp	.-326    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>

0000056e <__subsf3>:
 56e:	50 58       	subi	r21, 0x80	; 128

00000570 <__addsf3>:
 570:	bb 27       	eor	r27, r27
 572:	aa 27       	eor	r26, r26
 574:	0e 94 cf 02 	call	0x59e	; 0x59e <__addsf3x>
 578:	0c 94 19 04 	jmp	0x832	; 0x832 <__fp_round>
 57c:	0e 94 0b 04 	call	0x816	; 0x816 <__fp_pscA>
 580:	38 f0       	brcs	.+14     	; 0x590 <__addsf3+0x20>
 582:	0e 94 12 04 	call	0x824	; 0x824 <__fp_pscB>
 586:	20 f0       	brcs	.+8      	; 0x590 <__addsf3+0x20>
 588:	39 f4       	brne	.+14     	; 0x598 <__addsf3+0x28>
 58a:	9f 3f       	cpi	r25, 0xFF	; 255
 58c:	19 f4       	brne	.+6      	; 0x594 <__addsf3+0x24>
 58e:	26 f4       	brtc	.+8      	; 0x598 <__addsf3+0x28>
 590:	0c 94 08 04 	jmp	0x810	; 0x810 <__fp_nan>
 594:	0e f4       	brtc	.+2      	; 0x598 <__addsf3+0x28>
 596:	e0 95       	com	r30
 598:	e7 fb       	bst	r30, 7
 59a:	0c 94 02 04 	jmp	0x804	; 0x804 <__fp_inf>

0000059e <__addsf3x>:
 59e:	e9 2f       	mov	r30, r25
 5a0:	0e 94 2a 04 	call	0x854	; 0x854 <__fp_split3>
 5a4:	58 f3       	brcs	.-42     	; 0x57c <__addsf3+0xc>
 5a6:	ba 17       	cp	r27, r26
 5a8:	62 07       	cpc	r22, r18
 5aa:	73 07       	cpc	r23, r19
 5ac:	84 07       	cpc	r24, r20
 5ae:	95 07       	cpc	r25, r21
 5b0:	20 f0       	brcs	.+8      	; 0x5ba <__addsf3x+0x1c>
 5b2:	79 f4       	brne	.+30     	; 0x5d2 <__addsf3x+0x34>
 5b4:	a6 f5       	brtc	.+104    	; 0x61e <__addsf3x+0x80>
 5b6:	0c 94 4c 04 	jmp	0x898	; 0x898 <__fp_zero>
 5ba:	0e f4       	brtc	.+2      	; 0x5be <__addsf3x+0x20>
 5bc:	e0 95       	com	r30
 5be:	0b 2e       	mov	r0, r27
 5c0:	ba 2f       	mov	r27, r26
 5c2:	a0 2d       	mov	r26, r0
 5c4:	0b 01       	movw	r0, r22
 5c6:	b9 01       	movw	r22, r18
 5c8:	90 01       	movw	r18, r0
 5ca:	0c 01       	movw	r0, r24
 5cc:	ca 01       	movw	r24, r20
 5ce:	a0 01       	movw	r20, r0
 5d0:	11 24       	eor	r1, r1
 5d2:	ff 27       	eor	r31, r31
 5d4:	59 1b       	sub	r21, r25
 5d6:	99 f0       	breq	.+38     	; 0x5fe <__addsf3x+0x60>
 5d8:	59 3f       	cpi	r21, 0xF9	; 249
 5da:	50 f4       	brcc	.+20     	; 0x5f0 <__addsf3x+0x52>
 5dc:	50 3e       	cpi	r21, 0xE0	; 224
 5de:	68 f1       	brcs	.+90     	; 0x63a <__addsf3x+0x9c>
 5e0:	1a 16       	cp	r1, r26
 5e2:	f0 40       	sbci	r31, 0x00	; 0
 5e4:	a2 2f       	mov	r26, r18
 5e6:	23 2f       	mov	r18, r19
 5e8:	34 2f       	mov	r19, r20
 5ea:	44 27       	eor	r20, r20
 5ec:	58 5f       	subi	r21, 0xF8	; 248
 5ee:	f3 cf       	rjmp	.-26     	; 0x5d6 <__addsf3x+0x38>
 5f0:	46 95       	lsr	r20
 5f2:	37 95       	ror	r19
 5f4:	27 95       	ror	r18
 5f6:	a7 95       	ror	r26
 5f8:	f0 40       	sbci	r31, 0x00	; 0
 5fa:	53 95       	inc	r21
 5fc:	c9 f7       	brne	.-14     	; 0x5f0 <__addsf3x+0x52>
 5fe:	7e f4       	brtc	.+30     	; 0x61e <__addsf3x+0x80>
 600:	1f 16       	cp	r1, r31
 602:	ba 0b       	sbc	r27, r26
 604:	62 0b       	sbc	r22, r18
 606:	73 0b       	sbc	r23, r19
 608:	84 0b       	sbc	r24, r20
 60a:	ba f0       	brmi	.+46     	; 0x63a <__addsf3x+0x9c>
 60c:	91 50       	subi	r25, 0x01	; 1
 60e:	a1 f0       	breq	.+40     	; 0x638 <__addsf3x+0x9a>
 610:	ff 0f       	add	r31, r31
 612:	bb 1f       	adc	r27, r27
 614:	66 1f       	adc	r22, r22
 616:	77 1f       	adc	r23, r23
 618:	88 1f       	adc	r24, r24
 61a:	c2 f7       	brpl	.-16     	; 0x60c <__addsf3x+0x6e>
 61c:	0e c0       	rjmp	.+28     	; 0x63a <__addsf3x+0x9c>
 61e:	ba 0f       	add	r27, r26
 620:	62 1f       	adc	r22, r18
 622:	73 1f       	adc	r23, r19
 624:	84 1f       	adc	r24, r20
 626:	48 f4       	brcc	.+18     	; 0x63a <__addsf3x+0x9c>
 628:	87 95       	ror	r24
 62a:	77 95       	ror	r23
 62c:	67 95       	ror	r22
 62e:	b7 95       	ror	r27
 630:	f7 95       	ror	r31
 632:	9e 3f       	cpi	r25, 0xFE	; 254
 634:	08 f0       	brcs	.+2      	; 0x638 <__addsf3x+0x9a>
 636:	b0 cf       	rjmp	.-160    	; 0x598 <__addsf3+0x28>
 638:	93 95       	inc	r25
 63a:	88 0f       	add	r24, r24
 63c:	08 f0       	brcs	.+2      	; 0x640 <__addsf3x+0xa2>
 63e:	99 27       	eor	r25, r25
 640:	ee 0f       	add	r30, r30
 642:	97 95       	ror	r25
 644:	87 95       	ror	r24
 646:	08 95       	ret

00000648 <__divsf3>:
 648:	0e 94 38 03 	call	0x670	; 0x670 <__divsf3x>
 64c:	0c 94 19 04 	jmp	0x832	; 0x832 <__fp_round>
 650:	0e 94 12 04 	call	0x824	; 0x824 <__fp_pscB>
 654:	58 f0       	brcs	.+22     	; 0x66c <__divsf3+0x24>
 656:	0e 94 0b 04 	call	0x816	; 0x816 <__fp_pscA>
 65a:	40 f0       	brcs	.+16     	; 0x66c <__divsf3+0x24>
 65c:	29 f4       	brne	.+10     	; 0x668 <__divsf3+0x20>
 65e:	5f 3f       	cpi	r21, 0xFF	; 255
 660:	29 f0       	breq	.+10     	; 0x66c <__divsf3+0x24>
 662:	0c 94 02 04 	jmp	0x804	; 0x804 <__fp_inf>
 666:	51 11       	cpse	r21, r1
 668:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__fp_szero>
 66c:	0c 94 08 04 	jmp	0x810	; 0x810 <__fp_nan>

00000670 <__divsf3x>:
 670:	0e 94 2a 04 	call	0x854	; 0x854 <__fp_split3>
 674:	68 f3       	brcs	.-38     	; 0x650 <__divsf3+0x8>

00000676 <__divsf3_pse>:
 676:	99 23       	and	r25, r25
 678:	b1 f3       	breq	.-20     	; 0x666 <__divsf3+0x1e>
 67a:	55 23       	and	r21, r21
 67c:	91 f3       	breq	.-28     	; 0x662 <__divsf3+0x1a>
 67e:	95 1b       	sub	r25, r21
 680:	55 0b       	sbc	r21, r21
 682:	bb 27       	eor	r27, r27
 684:	aa 27       	eor	r26, r26
 686:	62 17       	cp	r22, r18
 688:	73 07       	cpc	r23, r19
 68a:	84 07       	cpc	r24, r20
 68c:	38 f0       	brcs	.+14     	; 0x69c <__divsf3_pse+0x26>
 68e:	9f 5f       	subi	r25, 0xFF	; 255
 690:	5f 4f       	sbci	r21, 0xFF	; 255
 692:	22 0f       	add	r18, r18
 694:	33 1f       	adc	r19, r19
 696:	44 1f       	adc	r20, r20
 698:	aa 1f       	adc	r26, r26
 69a:	a9 f3       	breq	.-22     	; 0x686 <__divsf3_pse+0x10>
 69c:	35 d0       	rcall	.+106    	; 0x708 <__divsf3_pse+0x92>
 69e:	0e 2e       	mov	r0, r30
 6a0:	3a f0       	brmi	.+14     	; 0x6b0 <__divsf3_pse+0x3a>
 6a2:	e0 e8       	ldi	r30, 0x80	; 128
 6a4:	32 d0       	rcall	.+100    	; 0x70a <__divsf3_pse+0x94>
 6a6:	91 50       	subi	r25, 0x01	; 1
 6a8:	50 40       	sbci	r21, 0x00	; 0
 6aa:	e6 95       	lsr	r30
 6ac:	00 1c       	adc	r0, r0
 6ae:	ca f7       	brpl	.-14     	; 0x6a2 <__divsf3_pse+0x2c>
 6b0:	2b d0       	rcall	.+86     	; 0x708 <__divsf3_pse+0x92>
 6b2:	fe 2f       	mov	r31, r30
 6b4:	29 d0       	rcall	.+82     	; 0x708 <__divsf3_pse+0x92>
 6b6:	66 0f       	add	r22, r22
 6b8:	77 1f       	adc	r23, r23
 6ba:	88 1f       	adc	r24, r24
 6bc:	bb 1f       	adc	r27, r27
 6be:	26 17       	cp	r18, r22
 6c0:	37 07       	cpc	r19, r23
 6c2:	48 07       	cpc	r20, r24
 6c4:	ab 07       	cpc	r26, r27
 6c6:	b0 e8       	ldi	r27, 0x80	; 128
 6c8:	09 f0       	breq	.+2      	; 0x6cc <__divsf3_pse+0x56>
 6ca:	bb 0b       	sbc	r27, r27
 6cc:	80 2d       	mov	r24, r0
 6ce:	bf 01       	movw	r22, r30
 6d0:	ff 27       	eor	r31, r31
 6d2:	93 58       	subi	r25, 0x83	; 131
 6d4:	5f 4f       	sbci	r21, 0xFF	; 255
 6d6:	3a f0       	brmi	.+14     	; 0x6e6 <__divsf3_pse+0x70>
 6d8:	9e 3f       	cpi	r25, 0xFE	; 254
 6da:	51 05       	cpc	r21, r1
 6dc:	78 f0       	brcs	.+30     	; 0x6fc <__divsf3_pse+0x86>
 6de:	0c 94 02 04 	jmp	0x804	; 0x804 <__fp_inf>
 6e2:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__fp_szero>
 6e6:	5f 3f       	cpi	r21, 0xFF	; 255
 6e8:	e4 f3       	brlt	.-8      	; 0x6e2 <__divsf3_pse+0x6c>
 6ea:	98 3e       	cpi	r25, 0xE8	; 232
 6ec:	d4 f3       	brlt	.-12     	; 0x6e2 <__divsf3_pse+0x6c>
 6ee:	86 95       	lsr	r24
 6f0:	77 95       	ror	r23
 6f2:	67 95       	ror	r22
 6f4:	b7 95       	ror	r27
 6f6:	f7 95       	ror	r31
 6f8:	9f 5f       	subi	r25, 0xFF	; 255
 6fa:	c9 f7       	brne	.-14     	; 0x6ee <__divsf3_pse+0x78>
 6fc:	88 0f       	add	r24, r24
 6fe:	91 1d       	adc	r25, r1
 700:	96 95       	lsr	r25
 702:	87 95       	ror	r24
 704:	97 f9       	bld	r25, 7
 706:	08 95       	ret
 708:	e1 e0       	ldi	r30, 0x01	; 1
 70a:	66 0f       	add	r22, r22
 70c:	77 1f       	adc	r23, r23
 70e:	88 1f       	adc	r24, r24
 710:	bb 1f       	adc	r27, r27
 712:	62 17       	cp	r22, r18
 714:	73 07       	cpc	r23, r19
 716:	84 07       	cpc	r24, r20
 718:	ba 07       	cpc	r27, r26
 71a:	20 f0       	brcs	.+8      	; 0x724 <__divsf3_pse+0xae>
 71c:	62 1b       	sub	r22, r18
 71e:	73 0b       	sbc	r23, r19
 720:	84 0b       	sbc	r24, r20
 722:	ba 0b       	sbc	r27, r26
 724:	ee 1f       	adc	r30, r30
 726:	88 f7       	brcc	.-30     	; 0x70a <__divsf3_pse+0x94>
 728:	e0 95       	com	r30
 72a:	08 95       	ret

0000072c <__fixunssfsi>:
 72c:	0e 94 32 04 	call	0x864	; 0x864 <__fp_splitA>
 730:	88 f0       	brcs	.+34     	; 0x754 <__fixunssfsi+0x28>
 732:	9f 57       	subi	r25, 0x7F	; 127
 734:	98 f0       	brcs	.+38     	; 0x75c <__fixunssfsi+0x30>
 736:	b9 2f       	mov	r27, r25
 738:	99 27       	eor	r25, r25
 73a:	b7 51       	subi	r27, 0x17	; 23
 73c:	b0 f0       	brcs	.+44     	; 0x76a <__fixunssfsi+0x3e>
 73e:	e1 f0       	breq	.+56     	; 0x778 <__fixunssfsi+0x4c>
 740:	66 0f       	add	r22, r22
 742:	77 1f       	adc	r23, r23
 744:	88 1f       	adc	r24, r24
 746:	99 1f       	adc	r25, r25
 748:	1a f0       	brmi	.+6      	; 0x750 <__fixunssfsi+0x24>
 74a:	ba 95       	dec	r27
 74c:	c9 f7       	brne	.-14     	; 0x740 <__fixunssfsi+0x14>
 74e:	14 c0       	rjmp	.+40     	; 0x778 <__fixunssfsi+0x4c>
 750:	b1 30       	cpi	r27, 0x01	; 1
 752:	91 f0       	breq	.+36     	; 0x778 <__fixunssfsi+0x4c>
 754:	0e 94 4c 04 	call	0x898	; 0x898 <__fp_zero>
 758:	b1 e0       	ldi	r27, 0x01	; 1
 75a:	08 95       	ret
 75c:	0c 94 4c 04 	jmp	0x898	; 0x898 <__fp_zero>
 760:	67 2f       	mov	r22, r23
 762:	78 2f       	mov	r23, r24
 764:	88 27       	eor	r24, r24
 766:	b8 5f       	subi	r27, 0xF8	; 248
 768:	39 f0       	breq	.+14     	; 0x778 <__fixunssfsi+0x4c>
 76a:	b9 3f       	cpi	r27, 0xF9	; 249
 76c:	cc f3       	brlt	.-14     	; 0x760 <__fixunssfsi+0x34>
 76e:	86 95       	lsr	r24
 770:	77 95       	ror	r23
 772:	67 95       	ror	r22
 774:	b3 95       	inc	r27
 776:	d9 f7       	brne	.-10     	; 0x76e <__fixunssfsi+0x42>
 778:	3e f4       	brtc	.+14     	; 0x788 <__fixunssfsi+0x5c>
 77a:	90 95       	com	r25
 77c:	80 95       	com	r24
 77e:	70 95       	com	r23
 780:	61 95       	neg	r22
 782:	7f 4f       	sbci	r23, 0xFF	; 255
 784:	8f 4f       	sbci	r24, 0xFF	; 255
 786:	9f 4f       	sbci	r25, 0xFF	; 255
 788:	08 95       	ret

0000078a <__floatunsisf>:
 78a:	e8 94       	clt
 78c:	09 c0       	rjmp	.+18     	; 0x7a0 <__floatsisf+0x12>

0000078e <__floatsisf>:
 78e:	97 fb       	bst	r25, 7
 790:	3e f4       	brtc	.+14     	; 0x7a0 <__floatsisf+0x12>
 792:	90 95       	com	r25
 794:	80 95       	com	r24
 796:	70 95       	com	r23
 798:	61 95       	neg	r22
 79a:	7f 4f       	sbci	r23, 0xFF	; 255
 79c:	8f 4f       	sbci	r24, 0xFF	; 255
 79e:	9f 4f       	sbci	r25, 0xFF	; 255
 7a0:	99 23       	and	r25, r25
 7a2:	a9 f0       	breq	.+42     	; 0x7ce <__floatsisf+0x40>
 7a4:	f9 2f       	mov	r31, r25
 7a6:	96 e9       	ldi	r25, 0x96	; 150
 7a8:	bb 27       	eor	r27, r27
 7aa:	93 95       	inc	r25
 7ac:	f6 95       	lsr	r31
 7ae:	87 95       	ror	r24
 7b0:	77 95       	ror	r23
 7b2:	67 95       	ror	r22
 7b4:	b7 95       	ror	r27
 7b6:	f1 11       	cpse	r31, r1
 7b8:	f8 cf       	rjmp	.-16     	; 0x7aa <__floatsisf+0x1c>
 7ba:	fa f4       	brpl	.+62     	; 0x7fa <__floatsisf+0x6c>
 7bc:	bb 0f       	add	r27, r27
 7be:	11 f4       	brne	.+4      	; 0x7c4 <__floatsisf+0x36>
 7c0:	60 ff       	sbrs	r22, 0
 7c2:	1b c0       	rjmp	.+54     	; 0x7fa <__floatsisf+0x6c>
 7c4:	6f 5f       	subi	r22, 0xFF	; 255
 7c6:	7f 4f       	sbci	r23, 0xFF	; 255
 7c8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ca:	9f 4f       	sbci	r25, 0xFF	; 255
 7cc:	16 c0       	rjmp	.+44     	; 0x7fa <__floatsisf+0x6c>
 7ce:	88 23       	and	r24, r24
 7d0:	11 f0       	breq	.+4      	; 0x7d6 <__floatsisf+0x48>
 7d2:	96 e9       	ldi	r25, 0x96	; 150
 7d4:	11 c0       	rjmp	.+34     	; 0x7f8 <__floatsisf+0x6a>
 7d6:	77 23       	and	r23, r23
 7d8:	21 f0       	breq	.+8      	; 0x7e2 <__floatsisf+0x54>
 7da:	9e e8       	ldi	r25, 0x8E	; 142
 7dc:	87 2f       	mov	r24, r23
 7de:	76 2f       	mov	r23, r22
 7e0:	05 c0       	rjmp	.+10     	; 0x7ec <__floatsisf+0x5e>
 7e2:	66 23       	and	r22, r22
 7e4:	71 f0       	breq	.+28     	; 0x802 <__floatsisf+0x74>
 7e6:	96 e8       	ldi	r25, 0x86	; 134
 7e8:	86 2f       	mov	r24, r22
 7ea:	70 e0       	ldi	r23, 0x00	; 0
 7ec:	60 e0       	ldi	r22, 0x00	; 0
 7ee:	2a f0       	brmi	.+10     	; 0x7fa <__floatsisf+0x6c>
 7f0:	9a 95       	dec	r25
 7f2:	66 0f       	add	r22, r22
 7f4:	77 1f       	adc	r23, r23
 7f6:	88 1f       	adc	r24, r24
 7f8:	da f7       	brpl	.-10     	; 0x7f0 <__floatsisf+0x62>
 7fa:	88 0f       	add	r24, r24
 7fc:	96 95       	lsr	r25
 7fe:	87 95       	ror	r24
 800:	97 f9       	bld	r25, 7
 802:	08 95       	ret

00000804 <__fp_inf>:
 804:	97 f9       	bld	r25, 7
 806:	9f 67       	ori	r25, 0x7F	; 127
 808:	80 e8       	ldi	r24, 0x80	; 128
 80a:	70 e0       	ldi	r23, 0x00	; 0
 80c:	60 e0       	ldi	r22, 0x00	; 0
 80e:	08 95       	ret

00000810 <__fp_nan>:
 810:	9f ef       	ldi	r25, 0xFF	; 255
 812:	80 ec       	ldi	r24, 0xC0	; 192
 814:	08 95       	ret

00000816 <__fp_pscA>:
 816:	00 24       	eor	r0, r0
 818:	0a 94       	dec	r0
 81a:	16 16       	cp	r1, r22
 81c:	17 06       	cpc	r1, r23
 81e:	18 06       	cpc	r1, r24
 820:	09 06       	cpc	r0, r25
 822:	08 95       	ret

00000824 <__fp_pscB>:
 824:	00 24       	eor	r0, r0
 826:	0a 94       	dec	r0
 828:	12 16       	cp	r1, r18
 82a:	13 06       	cpc	r1, r19
 82c:	14 06       	cpc	r1, r20
 82e:	05 06       	cpc	r0, r21
 830:	08 95       	ret

00000832 <__fp_round>:
 832:	09 2e       	mov	r0, r25
 834:	03 94       	inc	r0
 836:	00 0c       	add	r0, r0
 838:	11 f4       	brne	.+4      	; 0x83e <__fp_round+0xc>
 83a:	88 23       	and	r24, r24
 83c:	52 f0       	brmi	.+20     	; 0x852 <__fp_round+0x20>
 83e:	bb 0f       	add	r27, r27
 840:	40 f4       	brcc	.+16     	; 0x852 <__fp_round+0x20>
 842:	bf 2b       	or	r27, r31
 844:	11 f4       	brne	.+4      	; 0x84a <__fp_round+0x18>
 846:	60 ff       	sbrs	r22, 0
 848:	04 c0       	rjmp	.+8      	; 0x852 <__fp_round+0x20>
 84a:	6f 5f       	subi	r22, 0xFF	; 255
 84c:	7f 4f       	sbci	r23, 0xFF	; 255
 84e:	8f 4f       	sbci	r24, 0xFF	; 255
 850:	9f 4f       	sbci	r25, 0xFF	; 255
 852:	08 95       	ret

00000854 <__fp_split3>:
 854:	57 fd       	sbrc	r21, 7
 856:	90 58       	subi	r25, 0x80	; 128
 858:	44 0f       	add	r20, r20
 85a:	55 1f       	adc	r21, r21
 85c:	59 f0       	breq	.+22     	; 0x874 <__fp_splitA+0x10>
 85e:	5f 3f       	cpi	r21, 0xFF	; 255
 860:	71 f0       	breq	.+28     	; 0x87e <__fp_splitA+0x1a>
 862:	47 95       	ror	r20

00000864 <__fp_splitA>:
 864:	88 0f       	add	r24, r24
 866:	97 fb       	bst	r25, 7
 868:	99 1f       	adc	r25, r25
 86a:	61 f0       	breq	.+24     	; 0x884 <__fp_splitA+0x20>
 86c:	9f 3f       	cpi	r25, 0xFF	; 255
 86e:	79 f0       	breq	.+30     	; 0x88e <__fp_splitA+0x2a>
 870:	87 95       	ror	r24
 872:	08 95       	ret
 874:	12 16       	cp	r1, r18
 876:	13 06       	cpc	r1, r19
 878:	14 06       	cpc	r1, r20
 87a:	55 1f       	adc	r21, r21
 87c:	f2 cf       	rjmp	.-28     	; 0x862 <__fp_split3+0xe>
 87e:	46 95       	lsr	r20
 880:	f1 df       	rcall	.-30     	; 0x864 <__fp_splitA>
 882:	08 c0       	rjmp	.+16     	; 0x894 <__fp_splitA+0x30>
 884:	16 16       	cp	r1, r22
 886:	17 06       	cpc	r1, r23
 888:	18 06       	cpc	r1, r24
 88a:	99 1f       	adc	r25, r25
 88c:	f1 cf       	rjmp	.-30     	; 0x870 <__fp_splitA+0xc>
 88e:	86 95       	lsr	r24
 890:	71 05       	cpc	r23, r1
 892:	61 05       	cpc	r22, r1
 894:	08 94       	sec
 896:	08 95       	ret

00000898 <__fp_zero>:
 898:	e8 94       	clt

0000089a <__fp_szero>:
 89a:	bb 27       	eor	r27, r27
 89c:	66 27       	eor	r22, r22
 89e:	77 27       	eor	r23, r23
 8a0:	cb 01       	movw	r24, r22
 8a2:	97 f9       	bld	r25, 7
 8a4:	08 95       	ret

000008a6 <__mulsf3>:
 8a6:	0e 94 66 04 	call	0x8cc	; 0x8cc <__mulsf3x>
 8aa:	0c 94 19 04 	jmp	0x832	; 0x832 <__fp_round>
 8ae:	0e 94 0b 04 	call	0x816	; 0x816 <__fp_pscA>
 8b2:	38 f0       	brcs	.+14     	; 0x8c2 <__mulsf3+0x1c>
 8b4:	0e 94 12 04 	call	0x824	; 0x824 <__fp_pscB>
 8b8:	20 f0       	brcs	.+8      	; 0x8c2 <__mulsf3+0x1c>
 8ba:	95 23       	and	r25, r21
 8bc:	11 f0       	breq	.+4      	; 0x8c2 <__mulsf3+0x1c>
 8be:	0c 94 02 04 	jmp	0x804	; 0x804 <__fp_inf>
 8c2:	0c 94 08 04 	jmp	0x810	; 0x810 <__fp_nan>
 8c6:	11 24       	eor	r1, r1
 8c8:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__fp_szero>

000008cc <__mulsf3x>:
 8cc:	0e 94 2a 04 	call	0x854	; 0x854 <__fp_split3>
 8d0:	70 f3       	brcs	.-36     	; 0x8ae <__mulsf3+0x8>

000008d2 <__mulsf3_pse>:
 8d2:	95 9f       	mul	r25, r21
 8d4:	c1 f3       	breq	.-16     	; 0x8c6 <__mulsf3+0x20>
 8d6:	95 0f       	add	r25, r21
 8d8:	50 e0       	ldi	r21, 0x00	; 0
 8da:	55 1f       	adc	r21, r21
 8dc:	62 9f       	mul	r22, r18
 8de:	f0 01       	movw	r30, r0
 8e0:	72 9f       	mul	r23, r18
 8e2:	bb 27       	eor	r27, r27
 8e4:	f0 0d       	add	r31, r0
 8e6:	b1 1d       	adc	r27, r1
 8e8:	63 9f       	mul	r22, r19
 8ea:	aa 27       	eor	r26, r26
 8ec:	f0 0d       	add	r31, r0
 8ee:	b1 1d       	adc	r27, r1
 8f0:	aa 1f       	adc	r26, r26
 8f2:	64 9f       	mul	r22, r20
 8f4:	66 27       	eor	r22, r22
 8f6:	b0 0d       	add	r27, r0
 8f8:	a1 1d       	adc	r26, r1
 8fa:	66 1f       	adc	r22, r22
 8fc:	82 9f       	mul	r24, r18
 8fe:	22 27       	eor	r18, r18
 900:	b0 0d       	add	r27, r0
 902:	a1 1d       	adc	r26, r1
 904:	62 1f       	adc	r22, r18
 906:	73 9f       	mul	r23, r19
 908:	b0 0d       	add	r27, r0
 90a:	a1 1d       	adc	r26, r1
 90c:	62 1f       	adc	r22, r18
 90e:	83 9f       	mul	r24, r19
 910:	a0 0d       	add	r26, r0
 912:	61 1d       	adc	r22, r1
 914:	22 1f       	adc	r18, r18
 916:	74 9f       	mul	r23, r20
 918:	33 27       	eor	r19, r19
 91a:	a0 0d       	add	r26, r0
 91c:	61 1d       	adc	r22, r1
 91e:	23 1f       	adc	r18, r19
 920:	84 9f       	mul	r24, r20
 922:	60 0d       	add	r22, r0
 924:	21 1d       	adc	r18, r1
 926:	82 2f       	mov	r24, r18
 928:	76 2f       	mov	r23, r22
 92a:	6a 2f       	mov	r22, r26
 92c:	11 24       	eor	r1, r1
 92e:	9f 57       	subi	r25, 0x7F	; 127
 930:	50 40       	sbci	r21, 0x00	; 0
 932:	9a f0       	brmi	.+38     	; 0x95a <__mulsf3_pse+0x88>
 934:	f1 f0       	breq	.+60     	; 0x972 <__mulsf3_pse+0xa0>
 936:	88 23       	and	r24, r24
 938:	4a f0       	brmi	.+18     	; 0x94c <__mulsf3_pse+0x7a>
 93a:	ee 0f       	add	r30, r30
 93c:	ff 1f       	adc	r31, r31
 93e:	bb 1f       	adc	r27, r27
 940:	66 1f       	adc	r22, r22
 942:	77 1f       	adc	r23, r23
 944:	88 1f       	adc	r24, r24
 946:	91 50       	subi	r25, 0x01	; 1
 948:	50 40       	sbci	r21, 0x00	; 0
 94a:	a9 f7       	brne	.-22     	; 0x936 <__mulsf3_pse+0x64>
 94c:	9e 3f       	cpi	r25, 0xFE	; 254
 94e:	51 05       	cpc	r21, r1
 950:	80 f0       	brcs	.+32     	; 0x972 <__mulsf3_pse+0xa0>
 952:	0c 94 02 04 	jmp	0x804	; 0x804 <__fp_inf>
 956:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__fp_szero>
 95a:	5f 3f       	cpi	r21, 0xFF	; 255
 95c:	e4 f3       	brlt	.-8      	; 0x956 <__mulsf3_pse+0x84>
 95e:	98 3e       	cpi	r25, 0xE8	; 232
 960:	d4 f3       	brlt	.-12     	; 0x956 <__mulsf3_pse+0x84>
 962:	86 95       	lsr	r24
 964:	77 95       	ror	r23
 966:	67 95       	ror	r22
 968:	b7 95       	ror	r27
 96a:	f7 95       	ror	r31
 96c:	e7 95       	ror	r30
 96e:	9f 5f       	subi	r25, 0xFF	; 255
 970:	c1 f7       	brne	.-16     	; 0x962 <__mulsf3_pse+0x90>
 972:	fe 2b       	or	r31, r30
 974:	88 0f       	add	r24, r24
 976:	91 1d       	adc	r25, r1
 978:	96 95       	lsr	r25
 97a:	87 95       	ror	r24
 97c:	97 f9       	bld	r25, 7
 97e:	08 95       	ret

00000980 <sprintf>:
 980:	ae e0       	ldi	r26, 0x0E	; 14
 982:	b0 e0       	ldi	r27, 0x00	; 0
 984:	e5 ec       	ldi	r30, 0xC5	; 197
 986:	f4 e0       	ldi	r31, 0x04	; 4
 988:	aa c2       	rjmp	.+1364   	; 0xede <__prologue_saves__+0x1c>
 98a:	0d 89       	ldd	r16, Y+21	; 0x15
 98c:	1e 89       	ldd	r17, Y+22	; 0x16
 98e:	86 e0       	ldi	r24, 0x06	; 6
 990:	8c 83       	std	Y+4, r24	; 0x04
 992:	09 83       	std	Y+1, r16	; 0x01
 994:	1a 83       	std	Y+2, r17	; 0x02
 996:	8f ef       	ldi	r24, 0xFF	; 255
 998:	9f e7       	ldi	r25, 0x7F	; 127
 99a:	8d 83       	std	Y+5, r24	; 0x05
 99c:	9e 83       	std	Y+6, r25	; 0x06
 99e:	ae 01       	movw	r20, r28
 9a0:	47 5e       	subi	r20, 0xE7	; 231
 9a2:	5f 4f       	sbci	r21, 0xFF	; 255
 9a4:	6f 89       	ldd	r22, Y+23	; 0x17
 9a6:	78 8d       	ldd	r23, Y+24	; 0x18
 9a8:	ce 01       	movw	r24, r28
 9aa:	01 96       	adiw	r24, 0x01	; 1
 9ac:	08 d0       	rcall	.+16     	; 0x9be <vfprintf>
 9ae:	ef 81       	ldd	r30, Y+7	; 0x07
 9b0:	f8 85       	ldd	r31, Y+8	; 0x08
 9b2:	e0 0f       	add	r30, r16
 9b4:	f1 1f       	adc	r31, r17
 9b6:	10 82       	st	Z, r1
 9b8:	2e 96       	adiw	r28, 0x0e	; 14
 9ba:	e4 e0       	ldi	r30, 0x04	; 4
 9bc:	a9 c2       	rjmp	.+1362   	; 0xf10 <__epilogue_restores__+0x1c>

000009be <vfprintf>:
 9be:	ab e0       	ldi	r26, 0x0B	; 11
 9c0:	b0 e0       	ldi	r27, 0x00	; 0
 9c2:	e4 ee       	ldi	r30, 0xE4	; 228
 9c4:	f4 e0       	ldi	r31, 0x04	; 4
 9c6:	7d c2       	rjmp	.+1274   	; 0xec2 <__prologue_saves__>
 9c8:	6c 01       	movw	r12, r24
 9ca:	7b 01       	movw	r14, r22
 9cc:	8a 01       	movw	r16, r20
 9ce:	fc 01       	movw	r30, r24
 9d0:	16 82       	std	Z+6, r1	; 0x06
 9d2:	17 82       	std	Z+7, r1	; 0x07
 9d4:	83 81       	ldd	r24, Z+3	; 0x03
 9d6:	81 ff       	sbrs	r24, 1
 9d8:	bf c1       	rjmp	.+894    	; 0xd58 <vfprintf+0x39a>
 9da:	ce 01       	movw	r24, r28
 9dc:	01 96       	adiw	r24, 0x01	; 1
 9de:	3c 01       	movw	r6, r24
 9e0:	f6 01       	movw	r30, r12
 9e2:	93 81       	ldd	r25, Z+3	; 0x03
 9e4:	f7 01       	movw	r30, r14
 9e6:	93 fd       	sbrc	r25, 3
 9e8:	85 91       	lpm	r24, Z+
 9ea:	93 ff       	sbrs	r25, 3
 9ec:	81 91       	ld	r24, Z+
 9ee:	7f 01       	movw	r14, r30
 9f0:	88 23       	and	r24, r24
 9f2:	09 f4       	brne	.+2      	; 0x9f6 <vfprintf+0x38>
 9f4:	ad c1       	rjmp	.+858    	; 0xd50 <vfprintf+0x392>
 9f6:	85 32       	cpi	r24, 0x25	; 37
 9f8:	39 f4       	brne	.+14     	; 0xa08 <vfprintf+0x4a>
 9fa:	93 fd       	sbrc	r25, 3
 9fc:	85 91       	lpm	r24, Z+
 9fe:	93 ff       	sbrs	r25, 3
 a00:	81 91       	ld	r24, Z+
 a02:	7f 01       	movw	r14, r30
 a04:	85 32       	cpi	r24, 0x25	; 37
 a06:	21 f4       	brne	.+8      	; 0xa10 <vfprintf+0x52>
 a08:	b6 01       	movw	r22, r12
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	c0 d1       	rcall	.+896    	; 0xd8e <fputc>
 a0e:	e8 cf       	rjmp	.-48     	; 0x9e0 <vfprintf+0x22>
 a10:	91 2c       	mov	r9, r1
 a12:	21 2c       	mov	r2, r1
 a14:	31 2c       	mov	r3, r1
 a16:	ff e1       	ldi	r31, 0x1F	; 31
 a18:	f3 15       	cp	r31, r3
 a1a:	d8 f0       	brcs	.+54     	; 0xa52 <vfprintf+0x94>
 a1c:	8b 32       	cpi	r24, 0x2B	; 43
 a1e:	79 f0       	breq	.+30     	; 0xa3e <vfprintf+0x80>
 a20:	38 f4       	brcc	.+14     	; 0xa30 <vfprintf+0x72>
 a22:	80 32       	cpi	r24, 0x20	; 32
 a24:	79 f0       	breq	.+30     	; 0xa44 <vfprintf+0x86>
 a26:	83 32       	cpi	r24, 0x23	; 35
 a28:	a1 f4       	brne	.+40     	; 0xa52 <vfprintf+0x94>
 a2a:	23 2d       	mov	r18, r3
 a2c:	20 61       	ori	r18, 0x10	; 16
 a2e:	1d c0       	rjmp	.+58     	; 0xa6a <vfprintf+0xac>
 a30:	8d 32       	cpi	r24, 0x2D	; 45
 a32:	61 f0       	breq	.+24     	; 0xa4c <vfprintf+0x8e>
 a34:	80 33       	cpi	r24, 0x30	; 48
 a36:	69 f4       	brne	.+26     	; 0xa52 <vfprintf+0x94>
 a38:	23 2d       	mov	r18, r3
 a3a:	21 60       	ori	r18, 0x01	; 1
 a3c:	16 c0       	rjmp	.+44     	; 0xa6a <vfprintf+0xac>
 a3e:	83 2d       	mov	r24, r3
 a40:	82 60       	ori	r24, 0x02	; 2
 a42:	38 2e       	mov	r3, r24
 a44:	e3 2d       	mov	r30, r3
 a46:	e4 60       	ori	r30, 0x04	; 4
 a48:	3e 2e       	mov	r3, r30
 a4a:	2a c0       	rjmp	.+84     	; 0xaa0 <vfprintf+0xe2>
 a4c:	f3 2d       	mov	r31, r3
 a4e:	f8 60       	ori	r31, 0x08	; 8
 a50:	1d c0       	rjmp	.+58     	; 0xa8c <vfprintf+0xce>
 a52:	37 fc       	sbrc	r3, 7
 a54:	2d c0       	rjmp	.+90     	; 0xab0 <vfprintf+0xf2>
 a56:	20 ed       	ldi	r18, 0xD0	; 208
 a58:	28 0f       	add	r18, r24
 a5a:	2a 30       	cpi	r18, 0x0A	; 10
 a5c:	40 f0       	brcs	.+16     	; 0xa6e <vfprintf+0xb0>
 a5e:	8e 32       	cpi	r24, 0x2E	; 46
 a60:	b9 f4       	brne	.+46     	; 0xa90 <vfprintf+0xd2>
 a62:	36 fc       	sbrc	r3, 6
 a64:	75 c1       	rjmp	.+746    	; 0xd50 <vfprintf+0x392>
 a66:	23 2d       	mov	r18, r3
 a68:	20 64       	ori	r18, 0x40	; 64
 a6a:	32 2e       	mov	r3, r18
 a6c:	19 c0       	rjmp	.+50     	; 0xaa0 <vfprintf+0xe2>
 a6e:	36 fe       	sbrs	r3, 6
 a70:	06 c0       	rjmp	.+12     	; 0xa7e <vfprintf+0xc0>
 a72:	8a e0       	ldi	r24, 0x0A	; 10
 a74:	98 9e       	mul	r9, r24
 a76:	20 0d       	add	r18, r0
 a78:	11 24       	eor	r1, r1
 a7a:	92 2e       	mov	r9, r18
 a7c:	11 c0       	rjmp	.+34     	; 0xaa0 <vfprintf+0xe2>
 a7e:	ea e0       	ldi	r30, 0x0A	; 10
 a80:	2e 9e       	mul	r2, r30
 a82:	20 0d       	add	r18, r0
 a84:	11 24       	eor	r1, r1
 a86:	22 2e       	mov	r2, r18
 a88:	f3 2d       	mov	r31, r3
 a8a:	f0 62       	ori	r31, 0x20	; 32
 a8c:	3f 2e       	mov	r3, r31
 a8e:	08 c0       	rjmp	.+16     	; 0xaa0 <vfprintf+0xe2>
 a90:	8c 36       	cpi	r24, 0x6C	; 108
 a92:	21 f4       	brne	.+8      	; 0xa9c <vfprintf+0xde>
 a94:	83 2d       	mov	r24, r3
 a96:	80 68       	ori	r24, 0x80	; 128
 a98:	38 2e       	mov	r3, r24
 a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <vfprintf+0xe2>
 a9c:	88 36       	cpi	r24, 0x68	; 104
 a9e:	41 f4       	brne	.+16     	; 0xab0 <vfprintf+0xf2>
 aa0:	f7 01       	movw	r30, r14
 aa2:	93 fd       	sbrc	r25, 3
 aa4:	85 91       	lpm	r24, Z+
 aa6:	93 ff       	sbrs	r25, 3
 aa8:	81 91       	ld	r24, Z+
 aaa:	7f 01       	movw	r14, r30
 aac:	81 11       	cpse	r24, r1
 aae:	b3 cf       	rjmp	.-154    	; 0xa16 <vfprintf+0x58>
 ab0:	98 2f       	mov	r25, r24
 ab2:	9f 7d       	andi	r25, 0xDF	; 223
 ab4:	95 54       	subi	r25, 0x45	; 69
 ab6:	93 30       	cpi	r25, 0x03	; 3
 ab8:	28 f4       	brcc	.+10     	; 0xac4 <vfprintf+0x106>
 aba:	0c 5f       	subi	r16, 0xFC	; 252
 abc:	1f 4f       	sbci	r17, 0xFF	; 255
 abe:	9f e3       	ldi	r25, 0x3F	; 63
 ac0:	99 83       	std	Y+1, r25	; 0x01
 ac2:	0d c0       	rjmp	.+26     	; 0xade <vfprintf+0x120>
 ac4:	83 36       	cpi	r24, 0x63	; 99
 ac6:	31 f0       	breq	.+12     	; 0xad4 <vfprintf+0x116>
 ac8:	83 37       	cpi	r24, 0x73	; 115
 aca:	71 f0       	breq	.+28     	; 0xae8 <vfprintf+0x12a>
 acc:	83 35       	cpi	r24, 0x53	; 83
 ace:	09 f0       	breq	.+2      	; 0xad2 <vfprintf+0x114>
 ad0:	55 c0       	rjmp	.+170    	; 0xb7c <vfprintf+0x1be>
 ad2:	20 c0       	rjmp	.+64     	; 0xb14 <vfprintf+0x156>
 ad4:	f8 01       	movw	r30, r16
 ad6:	80 81       	ld	r24, Z
 ad8:	89 83       	std	Y+1, r24	; 0x01
 ada:	0e 5f       	subi	r16, 0xFE	; 254
 adc:	1f 4f       	sbci	r17, 0xFF	; 255
 ade:	88 24       	eor	r8, r8
 ae0:	83 94       	inc	r8
 ae2:	91 2c       	mov	r9, r1
 ae4:	53 01       	movw	r10, r6
 ae6:	12 c0       	rjmp	.+36     	; 0xb0c <vfprintf+0x14e>
 ae8:	28 01       	movw	r4, r16
 aea:	f2 e0       	ldi	r31, 0x02	; 2
 aec:	4f 0e       	add	r4, r31
 aee:	51 1c       	adc	r5, r1
 af0:	f8 01       	movw	r30, r16
 af2:	a0 80       	ld	r10, Z
 af4:	b1 80       	ldd	r11, Z+1	; 0x01
 af6:	36 fe       	sbrs	r3, 6
 af8:	03 c0       	rjmp	.+6      	; 0xb00 <vfprintf+0x142>
 afa:	69 2d       	mov	r22, r9
 afc:	70 e0       	ldi	r23, 0x00	; 0
 afe:	02 c0       	rjmp	.+4      	; 0xb04 <vfprintf+0x146>
 b00:	6f ef       	ldi	r22, 0xFF	; 255
 b02:	7f ef       	ldi	r23, 0xFF	; 255
 b04:	c5 01       	movw	r24, r10
 b06:	38 d1       	rcall	.+624    	; 0xd78 <strnlen>
 b08:	4c 01       	movw	r8, r24
 b0a:	82 01       	movw	r16, r4
 b0c:	f3 2d       	mov	r31, r3
 b0e:	ff 77       	andi	r31, 0x7F	; 127
 b10:	3f 2e       	mov	r3, r31
 b12:	15 c0       	rjmp	.+42     	; 0xb3e <vfprintf+0x180>
 b14:	28 01       	movw	r4, r16
 b16:	22 e0       	ldi	r18, 0x02	; 2
 b18:	42 0e       	add	r4, r18
 b1a:	51 1c       	adc	r5, r1
 b1c:	f8 01       	movw	r30, r16
 b1e:	a0 80       	ld	r10, Z
 b20:	b1 80       	ldd	r11, Z+1	; 0x01
 b22:	36 fe       	sbrs	r3, 6
 b24:	03 c0       	rjmp	.+6      	; 0xb2c <vfprintf+0x16e>
 b26:	69 2d       	mov	r22, r9
 b28:	70 e0       	ldi	r23, 0x00	; 0
 b2a:	02 c0       	rjmp	.+4      	; 0xb30 <vfprintf+0x172>
 b2c:	6f ef       	ldi	r22, 0xFF	; 255
 b2e:	7f ef       	ldi	r23, 0xFF	; 255
 b30:	c5 01       	movw	r24, r10
 b32:	17 d1       	rcall	.+558    	; 0xd62 <strnlen_P>
 b34:	4c 01       	movw	r8, r24
 b36:	f3 2d       	mov	r31, r3
 b38:	f0 68       	ori	r31, 0x80	; 128
 b3a:	3f 2e       	mov	r3, r31
 b3c:	82 01       	movw	r16, r4
 b3e:	33 fc       	sbrc	r3, 3
 b40:	19 c0       	rjmp	.+50     	; 0xb74 <vfprintf+0x1b6>
 b42:	82 2d       	mov	r24, r2
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	88 16       	cp	r8, r24
 b48:	99 06       	cpc	r9, r25
 b4a:	a0 f4       	brcc	.+40     	; 0xb74 <vfprintf+0x1b6>
 b4c:	b6 01       	movw	r22, r12
 b4e:	80 e2       	ldi	r24, 0x20	; 32
 b50:	90 e0       	ldi	r25, 0x00	; 0
 b52:	1d d1       	rcall	.+570    	; 0xd8e <fputc>
 b54:	2a 94       	dec	r2
 b56:	f5 cf       	rjmp	.-22     	; 0xb42 <vfprintf+0x184>
 b58:	f5 01       	movw	r30, r10
 b5a:	37 fc       	sbrc	r3, 7
 b5c:	85 91       	lpm	r24, Z+
 b5e:	37 fe       	sbrs	r3, 7
 b60:	81 91       	ld	r24, Z+
 b62:	5f 01       	movw	r10, r30
 b64:	b6 01       	movw	r22, r12
 b66:	90 e0       	ldi	r25, 0x00	; 0
 b68:	12 d1       	rcall	.+548    	; 0xd8e <fputc>
 b6a:	21 10       	cpse	r2, r1
 b6c:	2a 94       	dec	r2
 b6e:	21 e0       	ldi	r18, 0x01	; 1
 b70:	82 1a       	sub	r8, r18
 b72:	91 08       	sbc	r9, r1
 b74:	81 14       	cp	r8, r1
 b76:	91 04       	cpc	r9, r1
 b78:	79 f7       	brne	.-34     	; 0xb58 <vfprintf+0x19a>
 b7a:	e1 c0       	rjmp	.+450    	; 0xd3e <vfprintf+0x380>
 b7c:	84 36       	cpi	r24, 0x64	; 100
 b7e:	11 f0       	breq	.+4      	; 0xb84 <vfprintf+0x1c6>
 b80:	89 36       	cpi	r24, 0x69	; 105
 b82:	39 f5       	brne	.+78     	; 0xbd2 <vfprintf+0x214>
 b84:	f8 01       	movw	r30, r16
 b86:	37 fe       	sbrs	r3, 7
 b88:	07 c0       	rjmp	.+14     	; 0xb98 <vfprintf+0x1da>
 b8a:	60 81       	ld	r22, Z
 b8c:	71 81       	ldd	r23, Z+1	; 0x01
 b8e:	82 81       	ldd	r24, Z+2	; 0x02
 b90:	93 81       	ldd	r25, Z+3	; 0x03
 b92:	0c 5f       	subi	r16, 0xFC	; 252
 b94:	1f 4f       	sbci	r17, 0xFF	; 255
 b96:	08 c0       	rjmp	.+16     	; 0xba8 <vfprintf+0x1ea>
 b98:	60 81       	ld	r22, Z
 b9a:	71 81       	ldd	r23, Z+1	; 0x01
 b9c:	07 2e       	mov	r0, r23
 b9e:	00 0c       	add	r0, r0
 ba0:	88 0b       	sbc	r24, r24
 ba2:	99 0b       	sbc	r25, r25
 ba4:	0e 5f       	subi	r16, 0xFE	; 254
 ba6:	1f 4f       	sbci	r17, 0xFF	; 255
 ba8:	f3 2d       	mov	r31, r3
 baa:	ff 76       	andi	r31, 0x6F	; 111
 bac:	3f 2e       	mov	r3, r31
 bae:	97 ff       	sbrs	r25, 7
 bb0:	09 c0       	rjmp	.+18     	; 0xbc4 <vfprintf+0x206>
 bb2:	90 95       	com	r25
 bb4:	80 95       	com	r24
 bb6:	70 95       	com	r23
 bb8:	61 95       	neg	r22
 bba:	7f 4f       	sbci	r23, 0xFF	; 255
 bbc:	8f 4f       	sbci	r24, 0xFF	; 255
 bbe:	9f 4f       	sbci	r25, 0xFF	; 255
 bc0:	f0 68       	ori	r31, 0x80	; 128
 bc2:	3f 2e       	mov	r3, r31
 bc4:	2a e0       	ldi	r18, 0x0A	; 10
 bc6:	30 e0       	ldi	r19, 0x00	; 0
 bc8:	a3 01       	movw	r20, r6
 bca:	1d d1       	rcall	.+570    	; 0xe06 <__ultoa_invert>
 bcc:	88 2e       	mov	r8, r24
 bce:	86 18       	sub	r8, r6
 bd0:	44 c0       	rjmp	.+136    	; 0xc5a <vfprintf+0x29c>
 bd2:	85 37       	cpi	r24, 0x75	; 117
 bd4:	31 f4       	brne	.+12     	; 0xbe2 <vfprintf+0x224>
 bd6:	23 2d       	mov	r18, r3
 bd8:	2f 7e       	andi	r18, 0xEF	; 239
 bda:	b2 2e       	mov	r11, r18
 bdc:	2a e0       	ldi	r18, 0x0A	; 10
 bde:	30 e0       	ldi	r19, 0x00	; 0
 be0:	25 c0       	rjmp	.+74     	; 0xc2c <vfprintf+0x26e>
 be2:	93 2d       	mov	r25, r3
 be4:	99 7f       	andi	r25, 0xF9	; 249
 be6:	b9 2e       	mov	r11, r25
 be8:	8f 36       	cpi	r24, 0x6F	; 111
 bea:	c1 f0       	breq	.+48     	; 0xc1c <vfprintf+0x25e>
 bec:	18 f4       	brcc	.+6      	; 0xbf4 <vfprintf+0x236>
 bee:	88 35       	cpi	r24, 0x58	; 88
 bf0:	79 f0       	breq	.+30     	; 0xc10 <vfprintf+0x252>
 bf2:	ae c0       	rjmp	.+348    	; 0xd50 <vfprintf+0x392>
 bf4:	80 37       	cpi	r24, 0x70	; 112
 bf6:	19 f0       	breq	.+6      	; 0xbfe <vfprintf+0x240>
 bf8:	88 37       	cpi	r24, 0x78	; 120
 bfa:	21 f0       	breq	.+8      	; 0xc04 <vfprintf+0x246>
 bfc:	a9 c0       	rjmp	.+338    	; 0xd50 <vfprintf+0x392>
 bfe:	e9 2f       	mov	r30, r25
 c00:	e0 61       	ori	r30, 0x10	; 16
 c02:	be 2e       	mov	r11, r30
 c04:	b4 fe       	sbrs	r11, 4
 c06:	0d c0       	rjmp	.+26     	; 0xc22 <vfprintf+0x264>
 c08:	fb 2d       	mov	r31, r11
 c0a:	f4 60       	ori	r31, 0x04	; 4
 c0c:	bf 2e       	mov	r11, r31
 c0e:	09 c0       	rjmp	.+18     	; 0xc22 <vfprintf+0x264>
 c10:	34 fe       	sbrs	r3, 4
 c12:	0a c0       	rjmp	.+20     	; 0xc28 <vfprintf+0x26a>
 c14:	29 2f       	mov	r18, r25
 c16:	26 60       	ori	r18, 0x06	; 6
 c18:	b2 2e       	mov	r11, r18
 c1a:	06 c0       	rjmp	.+12     	; 0xc28 <vfprintf+0x26a>
 c1c:	28 e0       	ldi	r18, 0x08	; 8
 c1e:	30 e0       	ldi	r19, 0x00	; 0
 c20:	05 c0       	rjmp	.+10     	; 0xc2c <vfprintf+0x26e>
 c22:	20 e1       	ldi	r18, 0x10	; 16
 c24:	30 e0       	ldi	r19, 0x00	; 0
 c26:	02 c0       	rjmp	.+4      	; 0xc2c <vfprintf+0x26e>
 c28:	20 e1       	ldi	r18, 0x10	; 16
 c2a:	32 e0       	ldi	r19, 0x02	; 2
 c2c:	f8 01       	movw	r30, r16
 c2e:	b7 fe       	sbrs	r11, 7
 c30:	07 c0       	rjmp	.+14     	; 0xc40 <vfprintf+0x282>
 c32:	60 81       	ld	r22, Z
 c34:	71 81       	ldd	r23, Z+1	; 0x01
 c36:	82 81       	ldd	r24, Z+2	; 0x02
 c38:	93 81       	ldd	r25, Z+3	; 0x03
 c3a:	0c 5f       	subi	r16, 0xFC	; 252
 c3c:	1f 4f       	sbci	r17, 0xFF	; 255
 c3e:	06 c0       	rjmp	.+12     	; 0xc4c <vfprintf+0x28e>
 c40:	60 81       	ld	r22, Z
 c42:	71 81       	ldd	r23, Z+1	; 0x01
 c44:	80 e0       	ldi	r24, 0x00	; 0
 c46:	90 e0       	ldi	r25, 0x00	; 0
 c48:	0e 5f       	subi	r16, 0xFE	; 254
 c4a:	1f 4f       	sbci	r17, 0xFF	; 255
 c4c:	a3 01       	movw	r20, r6
 c4e:	db d0       	rcall	.+438    	; 0xe06 <__ultoa_invert>
 c50:	88 2e       	mov	r8, r24
 c52:	86 18       	sub	r8, r6
 c54:	fb 2d       	mov	r31, r11
 c56:	ff 77       	andi	r31, 0x7F	; 127
 c58:	3f 2e       	mov	r3, r31
 c5a:	36 fe       	sbrs	r3, 6
 c5c:	0d c0       	rjmp	.+26     	; 0xc78 <vfprintf+0x2ba>
 c5e:	23 2d       	mov	r18, r3
 c60:	2e 7f       	andi	r18, 0xFE	; 254
 c62:	a2 2e       	mov	r10, r18
 c64:	89 14       	cp	r8, r9
 c66:	58 f4       	brcc	.+22     	; 0xc7e <vfprintf+0x2c0>
 c68:	34 fe       	sbrs	r3, 4
 c6a:	0b c0       	rjmp	.+22     	; 0xc82 <vfprintf+0x2c4>
 c6c:	32 fc       	sbrc	r3, 2
 c6e:	09 c0       	rjmp	.+18     	; 0xc82 <vfprintf+0x2c4>
 c70:	83 2d       	mov	r24, r3
 c72:	8e 7e       	andi	r24, 0xEE	; 238
 c74:	a8 2e       	mov	r10, r24
 c76:	05 c0       	rjmp	.+10     	; 0xc82 <vfprintf+0x2c4>
 c78:	b8 2c       	mov	r11, r8
 c7a:	a3 2c       	mov	r10, r3
 c7c:	03 c0       	rjmp	.+6      	; 0xc84 <vfprintf+0x2c6>
 c7e:	b8 2c       	mov	r11, r8
 c80:	01 c0       	rjmp	.+2      	; 0xc84 <vfprintf+0x2c6>
 c82:	b9 2c       	mov	r11, r9
 c84:	a4 fe       	sbrs	r10, 4
 c86:	0f c0       	rjmp	.+30     	; 0xca6 <vfprintf+0x2e8>
 c88:	fe 01       	movw	r30, r28
 c8a:	e8 0d       	add	r30, r8
 c8c:	f1 1d       	adc	r31, r1
 c8e:	80 81       	ld	r24, Z
 c90:	80 33       	cpi	r24, 0x30	; 48
 c92:	21 f4       	brne	.+8      	; 0xc9c <vfprintf+0x2de>
 c94:	9a 2d       	mov	r25, r10
 c96:	99 7e       	andi	r25, 0xE9	; 233
 c98:	a9 2e       	mov	r10, r25
 c9a:	09 c0       	rjmp	.+18     	; 0xcae <vfprintf+0x2f0>
 c9c:	a2 fe       	sbrs	r10, 2
 c9e:	06 c0       	rjmp	.+12     	; 0xcac <vfprintf+0x2ee>
 ca0:	b3 94       	inc	r11
 ca2:	b3 94       	inc	r11
 ca4:	04 c0       	rjmp	.+8      	; 0xcae <vfprintf+0x2f0>
 ca6:	8a 2d       	mov	r24, r10
 ca8:	86 78       	andi	r24, 0x86	; 134
 caa:	09 f0       	breq	.+2      	; 0xcae <vfprintf+0x2f0>
 cac:	b3 94       	inc	r11
 cae:	a3 fc       	sbrc	r10, 3
 cb0:	10 c0       	rjmp	.+32     	; 0xcd2 <vfprintf+0x314>
 cb2:	a0 fe       	sbrs	r10, 0
 cb4:	06 c0       	rjmp	.+12     	; 0xcc2 <vfprintf+0x304>
 cb6:	b2 14       	cp	r11, r2
 cb8:	80 f4       	brcc	.+32     	; 0xcda <vfprintf+0x31c>
 cba:	28 0c       	add	r2, r8
 cbc:	92 2c       	mov	r9, r2
 cbe:	9b 18       	sub	r9, r11
 cc0:	0d c0       	rjmp	.+26     	; 0xcdc <vfprintf+0x31e>
 cc2:	b2 14       	cp	r11, r2
 cc4:	58 f4       	brcc	.+22     	; 0xcdc <vfprintf+0x31e>
 cc6:	b6 01       	movw	r22, r12
 cc8:	80 e2       	ldi	r24, 0x20	; 32
 cca:	90 e0       	ldi	r25, 0x00	; 0
 ccc:	60 d0       	rcall	.+192    	; 0xd8e <fputc>
 cce:	b3 94       	inc	r11
 cd0:	f8 cf       	rjmp	.-16     	; 0xcc2 <vfprintf+0x304>
 cd2:	b2 14       	cp	r11, r2
 cd4:	18 f4       	brcc	.+6      	; 0xcdc <vfprintf+0x31e>
 cd6:	2b 18       	sub	r2, r11
 cd8:	02 c0       	rjmp	.+4      	; 0xcde <vfprintf+0x320>
 cda:	98 2c       	mov	r9, r8
 cdc:	21 2c       	mov	r2, r1
 cde:	a4 fe       	sbrs	r10, 4
 ce0:	0f c0       	rjmp	.+30     	; 0xd00 <vfprintf+0x342>
 ce2:	b6 01       	movw	r22, r12
 ce4:	80 e3       	ldi	r24, 0x30	; 48
 ce6:	90 e0       	ldi	r25, 0x00	; 0
 ce8:	52 d0       	rcall	.+164    	; 0xd8e <fputc>
 cea:	a2 fe       	sbrs	r10, 2
 cec:	16 c0       	rjmp	.+44     	; 0xd1a <vfprintf+0x35c>
 cee:	a1 fc       	sbrc	r10, 1
 cf0:	03 c0       	rjmp	.+6      	; 0xcf8 <vfprintf+0x33a>
 cf2:	88 e7       	ldi	r24, 0x78	; 120
 cf4:	90 e0       	ldi	r25, 0x00	; 0
 cf6:	02 c0       	rjmp	.+4      	; 0xcfc <vfprintf+0x33e>
 cf8:	88 e5       	ldi	r24, 0x58	; 88
 cfa:	90 e0       	ldi	r25, 0x00	; 0
 cfc:	b6 01       	movw	r22, r12
 cfe:	0c c0       	rjmp	.+24     	; 0xd18 <vfprintf+0x35a>
 d00:	8a 2d       	mov	r24, r10
 d02:	86 78       	andi	r24, 0x86	; 134
 d04:	51 f0       	breq	.+20     	; 0xd1a <vfprintf+0x35c>
 d06:	a1 fe       	sbrs	r10, 1
 d08:	02 c0       	rjmp	.+4      	; 0xd0e <vfprintf+0x350>
 d0a:	8b e2       	ldi	r24, 0x2B	; 43
 d0c:	01 c0       	rjmp	.+2      	; 0xd10 <vfprintf+0x352>
 d0e:	80 e2       	ldi	r24, 0x20	; 32
 d10:	a7 fc       	sbrc	r10, 7
 d12:	8d e2       	ldi	r24, 0x2D	; 45
 d14:	b6 01       	movw	r22, r12
 d16:	90 e0       	ldi	r25, 0x00	; 0
 d18:	3a d0       	rcall	.+116    	; 0xd8e <fputc>
 d1a:	89 14       	cp	r8, r9
 d1c:	30 f4       	brcc	.+12     	; 0xd2a <vfprintf+0x36c>
 d1e:	b6 01       	movw	r22, r12
 d20:	80 e3       	ldi	r24, 0x30	; 48
 d22:	90 e0       	ldi	r25, 0x00	; 0
 d24:	34 d0       	rcall	.+104    	; 0xd8e <fputc>
 d26:	9a 94       	dec	r9
 d28:	f8 cf       	rjmp	.-16     	; 0xd1a <vfprintf+0x35c>
 d2a:	8a 94       	dec	r8
 d2c:	f3 01       	movw	r30, r6
 d2e:	e8 0d       	add	r30, r8
 d30:	f1 1d       	adc	r31, r1
 d32:	80 81       	ld	r24, Z
 d34:	b6 01       	movw	r22, r12
 d36:	90 e0       	ldi	r25, 0x00	; 0
 d38:	2a d0       	rcall	.+84     	; 0xd8e <fputc>
 d3a:	81 10       	cpse	r8, r1
 d3c:	f6 cf       	rjmp	.-20     	; 0xd2a <vfprintf+0x36c>
 d3e:	22 20       	and	r2, r2
 d40:	09 f4       	brne	.+2      	; 0xd44 <vfprintf+0x386>
 d42:	4e ce       	rjmp	.-868    	; 0x9e0 <vfprintf+0x22>
 d44:	b6 01       	movw	r22, r12
 d46:	80 e2       	ldi	r24, 0x20	; 32
 d48:	90 e0       	ldi	r25, 0x00	; 0
 d4a:	21 d0       	rcall	.+66     	; 0xd8e <fputc>
 d4c:	2a 94       	dec	r2
 d4e:	f7 cf       	rjmp	.-18     	; 0xd3e <vfprintf+0x380>
 d50:	f6 01       	movw	r30, r12
 d52:	86 81       	ldd	r24, Z+6	; 0x06
 d54:	97 81       	ldd	r25, Z+7	; 0x07
 d56:	02 c0       	rjmp	.+4      	; 0xd5c <vfprintf+0x39e>
 d58:	8f ef       	ldi	r24, 0xFF	; 255
 d5a:	9f ef       	ldi	r25, 0xFF	; 255
 d5c:	2b 96       	adiw	r28, 0x0b	; 11
 d5e:	e2 e1       	ldi	r30, 0x12	; 18
 d60:	c9 c0       	rjmp	.+402    	; 0xef4 <__epilogue_restores__>

00000d62 <strnlen_P>:
 d62:	fc 01       	movw	r30, r24
 d64:	05 90       	lpm	r0, Z+
 d66:	61 50       	subi	r22, 0x01	; 1
 d68:	70 40       	sbci	r23, 0x00	; 0
 d6a:	01 10       	cpse	r0, r1
 d6c:	d8 f7       	brcc	.-10     	; 0xd64 <strnlen_P+0x2>
 d6e:	80 95       	com	r24
 d70:	90 95       	com	r25
 d72:	8e 0f       	add	r24, r30
 d74:	9f 1f       	adc	r25, r31
 d76:	08 95       	ret

00000d78 <strnlen>:
 d78:	fc 01       	movw	r30, r24
 d7a:	61 50       	subi	r22, 0x01	; 1
 d7c:	70 40       	sbci	r23, 0x00	; 0
 d7e:	01 90       	ld	r0, Z+
 d80:	01 10       	cpse	r0, r1
 d82:	d8 f7       	brcc	.-10     	; 0xd7a <strnlen+0x2>
 d84:	80 95       	com	r24
 d86:	90 95       	com	r25
 d88:	8e 0f       	add	r24, r30
 d8a:	9f 1f       	adc	r25, r31
 d8c:	08 95       	ret

00000d8e <fputc>:
 d8e:	0f 93       	push	r16
 d90:	1f 93       	push	r17
 d92:	cf 93       	push	r28
 d94:	df 93       	push	r29
 d96:	fb 01       	movw	r30, r22
 d98:	23 81       	ldd	r18, Z+3	; 0x03
 d9a:	21 fd       	sbrc	r18, 1
 d9c:	03 c0       	rjmp	.+6      	; 0xda4 <fputc+0x16>
 d9e:	8f ef       	ldi	r24, 0xFF	; 255
 da0:	9f ef       	ldi	r25, 0xFF	; 255
 da2:	2c c0       	rjmp	.+88     	; 0xdfc <fputc+0x6e>
 da4:	22 ff       	sbrs	r18, 2
 da6:	16 c0       	rjmp	.+44     	; 0xdd4 <fputc+0x46>
 da8:	46 81       	ldd	r20, Z+6	; 0x06
 daa:	57 81       	ldd	r21, Z+7	; 0x07
 dac:	24 81       	ldd	r18, Z+4	; 0x04
 dae:	35 81       	ldd	r19, Z+5	; 0x05
 db0:	42 17       	cp	r20, r18
 db2:	53 07       	cpc	r21, r19
 db4:	44 f4       	brge	.+16     	; 0xdc6 <fputc+0x38>
 db6:	a0 81       	ld	r26, Z
 db8:	b1 81       	ldd	r27, Z+1	; 0x01
 dba:	9d 01       	movw	r18, r26
 dbc:	2f 5f       	subi	r18, 0xFF	; 255
 dbe:	3f 4f       	sbci	r19, 0xFF	; 255
 dc0:	20 83       	st	Z, r18
 dc2:	31 83       	std	Z+1, r19	; 0x01
 dc4:	8c 93       	st	X, r24
 dc6:	26 81       	ldd	r18, Z+6	; 0x06
 dc8:	37 81       	ldd	r19, Z+7	; 0x07
 dca:	2f 5f       	subi	r18, 0xFF	; 255
 dcc:	3f 4f       	sbci	r19, 0xFF	; 255
 dce:	26 83       	std	Z+6, r18	; 0x06
 dd0:	37 83       	std	Z+7, r19	; 0x07
 dd2:	14 c0       	rjmp	.+40     	; 0xdfc <fputc+0x6e>
 dd4:	8b 01       	movw	r16, r22
 dd6:	ec 01       	movw	r28, r24
 dd8:	fb 01       	movw	r30, r22
 dda:	00 84       	ldd	r0, Z+8	; 0x08
 ddc:	f1 85       	ldd	r31, Z+9	; 0x09
 dde:	e0 2d       	mov	r30, r0
 de0:	09 95       	icall
 de2:	89 2b       	or	r24, r25
 de4:	e1 f6       	brne	.-72     	; 0xd9e <fputc+0x10>
 de6:	d8 01       	movw	r26, r16
 de8:	16 96       	adiw	r26, 0x06	; 6
 dea:	8d 91       	ld	r24, X+
 dec:	9c 91       	ld	r25, X
 dee:	17 97       	sbiw	r26, 0x07	; 7
 df0:	01 96       	adiw	r24, 0x01	; 1
 df2:	16 96       	adiw	r26, 0x06	; 6
 df4:	8d 93       	st	X+, r24
 df6:	9c 93       	st	X, r25
 df8:	17 97       	sbiw	r26, 0x07	; 7
 dfa:	ce 01       	movw	r24, r28
 dfc:	df 91       	pop	r29
 dfe:	cf 91       	pop	r28
 e00:	1f 91       	pop	r17
 e02:	0f 91       	pop	r16
 e04:	08 95       	ret

00000e06 <__ultoa_invert>:
 e06:	fa 01       	movw	r30, r20
 e08:	aa 27       	eor	r26, r26
 e0a:	28 30       	cpi	r18, 0x08	; 8
 e0c:	51 f1       	breq	.+84     	; 0xe62 <__ultoa_invert+0x5c>
 e0e:	20 31       	cpi	r18, 0x10	; 16
 e10:	81 f1       	breq	.+96     	; 0xe72 <__ultoa_invert+0x6c>
 e12:	e8 94       	clt
 e14:	6f 93       	push	r22
 e16:	6e 7f       	andi	r22, 0xFE	; 254
 e18:	6e 5f       	subi	r22, 0xFE	; 254
 e1a:	7f 4f       	sbci	r23, 0xFF	; 255
 e1c:	8f 4f       	sbci	r24, 0xFF	; 255
 e1e:	9f 4f       	sbci	r25, 0xFF	; 255
 e20:	af 4f       	sbci	r26, 0xFF	; 255
 e22:	b1 e0       	ldi	r27, 0x01	; 1
 e24:	3e d0       	rcall	.+124    	; 0xea2 <__ultoa_invert+0x9c>
 e26:	b4 e0       	ldi	r27, 0x04	; 4
 e28:	3c d0       	rcall	.+120    	; 0xea2 <__ultoa_invert+0x9c>
 e2a:	67 0f       	add	r22, r23
 e2c:	78 1f       	adc	r23, r24
 e2e:	89 1f       	adc	r24, r25
 e30:	9a 1f       	adc	r25, r26
 e32:	a1 1d       	adc	r26, r1
 e34:	68 0f       	add	r22, r24
 e36:	79 1f       	adc	r23, r25
 e38:	8a 1f       	adc	r24, r26
 e3a:	91 1d       	adc	r25, r1
 e3c:	a1 1d       	adc	r26, r1
 e3e:	6a 0f       	add	r22, r26
 e40:	71 1d       	adc	r23, r1
 e42:	81 1d       	adc	r24, r1
 e44:	91 1d       	adc	r25, r1
 e46:	a1 1d       	adc	r26, r1
 e48:	20 d0       	rcall	.+64     	; 0xe8a <__ultoa_invert+0x84>
 e4a:	09 f4       	brne	.+2      	; 0xe4e <__ultoa_invert+0x48>
 e4c:	68 94       	set
 e4e:	3f 91       	pop	r19
 e50:	2a e0       	ldi	r18, 0x0A	; 10
 e52:	26 9f       	mul	r18, r22
 e54:	11 24       	eor	r1, r1
 e56:	30 19       	sub	r19, r0
 e58:	30 5d       	subi	r19, 0xD0	; 208
 e5a:	31 93       	st	Z+, r19
 e5c:	de f6       	brtc	.-74     	; 0xe14 <__ultoa_invert+0xe>
 e5e:	cf 01       	movw	r24, r30
 e60:	08 95       	ret
 e62:	46 2f       	mov	r20, r22
 e64:	47 70       	andi	r20, 0x07	; 7
 e66:	40 5d       	subi	r20, 0xD0	; 208
 e68:	41 93       	st	Z+, r20
 e6a:	b3 e0       	ldi	r27, 0x03	; 3
 e6c:	0f d0       	rcall	.+30     	; 0xe8c <__ultoa_invert+0x86>
 e6e:	c9 f7       	brne	.-14     	; 0xe62 <__ultoa_invert+0x5c>
 e70:	f6 cf       	rjmp	.-20     	; 0xe5e <__ultoa_invert+0x58>
 e72:	46 2f       	mov	r20, r22
 e74:	4f 70       	andi	r20, 0x0F	; 15
 e76:	40 5d       	subi	r20, 0xD0	; 208
 e78:	4a 33       	cpi	r20, 0x3A	; 58
 e7a:	18 f0       	brcs	.+6      	; 0xe82 <__ultoa_invert+0x7c>
 e7c:	49 5d       	subi	r20, 0xD9	; 217
 e7e:	31 fd       	sbrc	r19, 1
 e80:	40 52       	subi	r20, 0x20	; 32
 e82:	41 93       	st	Z+, r20
 e84:	02 d0       	rcall	.+4      	; 0xe8a <__ultoa_invert+0x84>
 e86:	a9 f7       	brne	.-22     	; 0xe72 <__ultoa_invert+0x6c>
 e88:	ea cf       	rjmp	.-44     	; 0xe5e <__ultoa_invert+0x58>
 e8a:	b4 e0       	ldi	r27, 0x04	; 4
 e8c:	a6 95       	lsr	r26
 e8e:	97 95       	ror	r25
 e90:	87 95       	ror	r24
 e92:	77 95       	ror	r23
 e94:	67 95       	ror	r22
 e96:	ba 95       	dec	r27
 e98:	c9 f7       	brne	.-14     	; 0xe8c <__ultoa_invert+0x86>
 e9a:	00 97       	sbiw	r24, 0x00	; 0
 e9c:	61 05       	cpc	r22, r1
 e9e:	71 05       	cpc	r23, r1
 ea0:	08 95       	ret
 ea2:	9b 01       	movw	r18, r22
 ea4:	ac 01       	movw	r20, r24
 ea6:	0a 2e       	mov	r0, r26
 ea8:	06 94       	lsr	r0
 eaa:	57 95       	ror	r21
 eac:	47 95       	ror	r20
 eae:	37 95       	ror	r19
 eb0:	27 95       	ror	r18
 eb2:	ba 95       	dec	r27
 eb4:	c9 f7       	brne	.-14     	; 0xea8 <__ultoa_invert+0xa2>
 eb6:	62 0f       	add	r22, r18
 eb8:	73 1f       	adc	r23, r19
 eba:	84 1f       	adc	r24, r20
 ebc:	95 1f       	adc	r25, r21
 ebe:	a0 1d       	adc	r26, r0
 ec0:	08 95       	ret

00000ec2 <__prologue_saves__>:
 ec2:	2f 92       	push	r2
 ec4:	3f 92       	push	r3
 ec6:	4f 92       	push	r4
 ec8:	5f 92       	push	r5
 eca:	6f 92       	push	r6
 ecc:	7f 92       	push	r7
 ece:	8f 92       	push	r8
 ed0:	9f 92       	push	r9
 ed2:	af 92       	push	r10
 ed4:	bf 92       	push	r11
 ed6:	cf 92       	push	r12
 ed8:	df 92       	push	r13
 eda:	ef 92       	push	r14
 edc:	ff 92       	push	r15
 ede:	0f 93       	push	r16
 ee0:	1f 93       	push	r17
 ee2:	cf 93       	push	r28
 ee4:	df 93       	push	r29
 ee6:	cd b7       	in	r28, 0x3d	; 61
 ee8:	de b7       	in	r29, 0x3e	; 62
 eea:	ca 1b       	sub	r28, r26
 eec:	db 0b       	sbc	r29, r27
 eee:	cd bf       	out	0x3d, r28	; 61
 ef0:	de bf       	out	0x3e, r29	; 62
 ef2:	09 94       	ijmp

00000ef4 <__epilogue_restores__>:
 ef4:	2a 88       	ldd	r2, Y+18	; 0x12
 ef6:	39 88       	ldd	r3, Y+17	; 0x11
 ef8:	48 88       	ldd	r4, Y+16	; 0x10
 efa:	5f 84       	ldd	r5, Y+15	; 0x0f
 efc:	6e 84       	ldd	r6, Y+14	; 0x0e
 efe:	7d 84       	ldd	r7, Y+13	; 0x0d
 f00:	8c 84       	ldd	r8, Y+12	; 0x0c
 f02:	9b 84       	ldd	r9, Y+11	; 0x0b
 f04:	aa 84       	ldd	r10, Y+10	; 0x0a
 f06:	b9 84       	ldd	r11, Y+9	; 0x09
 f08:	c8 84       	ldd	r12, Y+8	; 0x08
 f0a:	df 80       	ldd	r13, Y+7	; 0x07
 f0c:	ee 80       	ldd	r14, Y+6	; 0x06
 f0e:	fd 80       	ldd	r15, Y+5	; 0x05
 f10:	0c 81       	ldd	r16, Y+4	; 0x04
 f12:	1b 81       	ldd	r17, Y+3	; 0x03
 f14:	aa 81       	ldd	r26, Y+2	; 0x02
 f16:	b9 81       	ldd	r27, Y+1	; 0x01
 f18:	ce 0f       	add	r28, r30
 f1a:	d1 1d       	adc	r29, r1
 f1c:	cd bf       	out	0x3d, r28	; 61
 f1e:	de bf       	out	0x3e, r29	; 62
 f20:	ed 01       	movw	r28, r26
 f22:	08 95       	ret

00000f24 <_exit>:
 f24:	f8 94       	cli

00000f26 <__stop_program>:
 f26:	ff cf       	rjmp	.-2      	; 0xf26 <__stop_program>
